{"version":3,"file":"component---src-pages-documentation-adobe-analytics-tabs-product-variable-md-912889c7396f33d8779f.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/documentation/adobe-analytics/tabs/product-variable.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/acp-mobile-sdkdocs/acp-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Variant = makeShortcode(\"Variant\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Variant platform=\"android\" task=\"set-variable\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`cdata.put(\"&&products\", \"Category;Product;Quantity;Price[,Category;Product;Quantity;Price]\");\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`//create a context data dictionary\nHashMap cdata = new HashMap<String, String>();\n// add products, a purchase id, a purchase context data key, and any other data you want to collect.\n// Note the special syntax for products\ncdata.put(\"&&products\", \";Running Shoes;1;69.95,;Running Socks;10;29.99\");\ncdata.put(\"myapp.purchase\", \"1\");\ncdata.put(\"myapp.purchaseid\", \"1234567890\");\n// send the tracking call - use either a trackAction or trackState call.\n// trackAction example:\nMobileCore.trackAction(\"purchase\", cdata);\n// trackState example:\nMobileCore.trackState(\"Order Confirmation\", cdata);\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"set-variable\" repeat=\"10\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`contextData[\"&&products\"] = \"Category;Product;Quantity;Price[,Category;Product;Quantity;Price]\"\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`//create a context data dictionary\nvar contextData:[String:String]=[:] \n\n// add products, a purchase id, a purchase context data key, and any other data you want to collect.\n// Note the special syntax for products\ncontextData[\"&&products\"] = \";Running Shoes;1;69.95,;Running Socks;10;29.99\"\ncontextData[\"m.purchaseid\"] = \"1234567890\"\ncontextData[\"m.purchase\"] = \"1\"\n\n// send the tracking call - use either a trackAction or trackState call.\n// trackAction example:\nACPCore.trackAction(\"purchase\", data: contextData)\n// trackState example:\nACPCore.trackState(\"Order Confirmation\", data: contextData)\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`[contextData setObject:@\"Category;Product;Quantity;Price[,Category;Product;Quantity;Price]\" forKey:@\"&&products\"];\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`//create a context data dictionary\nNSMutableDictionary *contextData = [NSMutableDictionary dictionary];\n\n// add products, a purchase id, a purchase context data key, and any other data you want to collect.\n// Note the special syntax for products\n[contextData setObject:@\";Running Shoes;1;69.95,;Running Socks;10;29.99\" forKey:@\"&&products\"];\n[contextData setObject:@\"1234567890\" forKey:@\"m.purchaseid\"];\n[contextData setObject:@\"1\" forKey:@\"m.purchase\"];\n\n// send the tracking call - use either a trackAction or trackState call.\n// trackAction example:\n[ACPCore trackAction:@\"purchase\" data:contextData];\n// trackState example:\n[ACPCore trackState:@\"Order Confirmation\" data:contextData];\n`}</code></pre>\n    <Variant platform=\"react-native\" task=\"set-variable\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript\"\n    }}>{`JavaScript`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`contextData[\"&&products\"] = \"Category;Product;Quantity;Price[,Category;Product;Quantity;Price]\";\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`//create a context data dictionary\nvar contextData = {};\n\n// add products, a purchase id, a purchase context data key, and any other data you want to collect.\n// Note the special syntax for products\ncontextData[\"&&products\"] = \";Running Shoes;1;69.95,;Running Socks;10;29.99\";\ncontextData[\"m.purchaseid\"] = \"1234567890\";\ncontextData[\"m.purchase\"] = \"1\";\n\n// send the tracking call - use either a trackAction or TrackState call.\n// trackAction example:\nACPCore.trackAction(\"purchase\", contextData);\n// trackState example:\nACPCore.trackState(\"Order Confirmation\", contextData);\n`}</code></pre>\n    <Variant platform=\"flutter\" task=\"set-variable\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"dart\"\n    }}>{`Dart`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`contextData[\"&&products\"] = \"Category;Product;Quantity;Price[,Category;Product;Quantity;Price]\";\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`//create a context data dictionary\nvar contextData = {};\n\n// add products, a purchase id, a purchase context data key, and any other data you want to collect.\n// Note the special syntax for products\ncontextData[\"&&products\"] = \";Running Shoes;1;69.95,;Running Socks;10;29.99\";\ncontextData[\"m.purchaseid\"] = \"1234567890\";\ncontextData[\"m.purchase\"] = \"1\";\n\n// send the tracking call - use either a trackAction or TrackState call.\n// trackAction example:\nFlutterACPCore.trackAction(\"purchase\", data: contextData);\n// trackState example:\nFlutterACPCore.trackState(\"Order Confirmation\", data: contextData);\n`}</code></pre>\n    <Variant platform=\"android\" task=\"products\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-1\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`//create a context data dictionary \nHashMap cdata = new HashMap<String, String>(); \n\n// add products, a purchase id, a purchase context data key, and any other data you want to collect. \n// Note the special syntax for products. \n// There are two products in this example: Running shoes and Running Socks, they are separated by a comma.\n// Attributes event1 and eVar1 only apply to Running Shoes.\ncdata.put(\"&&events\", \"event1\"); \ncdata.put(\"&&products\", \";Running Shoes;1;69.95;event1=5.5;eVar1=Merchandising,;Running Socks;10;29.99\"); \ncdata.put(\"myapp.purchase\", \"1\"); \ncdata.put(\"myapp.purchaseid\", \"1234567890\"); \n\n// send the tracking call - use either a trackAction or trackState call.\n// trackAction example: \nMobileCore.trackAction(\"purchase\", cdata); \n// trackState example: \nMobileCore.trackState(\"Order Confirmation\", cdata);\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"products\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-1\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`//create a context data dictionary\nvar contextData:[String:String]=[:] \n\n// add products, a purchase id, a purchase context data key, and any other data you want to collect.\n// Note the special syntax for products.\n// There are two products in this example: Running shoes and Running Socks, they are separated by a comma.\n// Attributes event1 and eVar1 only apply to Running Shoes.\ncontextData[\"&&events\"] = \"event1\"\ncontextData[\"&&products\"] = \";Running Shoes;1;69.95;event1=5.5;eVar1=Merchandising,;Running Socks;10;29.99\"\ncontextData[\"m.purchaseid\"] = \"1234567890\"\ncontextData[\"m.purchase\"] = \"1\"\n\n// send the tracking call - use either a trackAction or trackState call.\n// trackAction example:\nACPCore.trackAction(\"purchase\", data: contextData)\n// trackState example:\nACPCore.trackState(\"Order Confirmation\", data: contextData)\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-1\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`//create a context data dictionary \nNSMutableDictionary *contextData = [NSMutableDictionary dictionary]; \n\n// add products, a purchase id, a purchase context data key, and any other data you want to collect. \n// Note the special syntax for products.\n// There are two products in this example: Running shoes and Running Socks, they are separated by a comma.\n// Attributes event1 and eVar1 only apply to Running Shoes. \n[contextData setObject:@\"event1\" forKey:@\"&&events\"]; \n[contextData setObject:@\";Running Shoes;1;69.95;event1=5.5;eVar1=Merchandising,;Running Socks;10;29.99\" forKey:@\"&&products\"]; \n[contextData setObject:@\"1234567890\" forKey:@\"m.purchaseid\"]; \n[contextData setObject:@\"1\" forKey:@\"m.purchase\"]; \n\n// send the tracking call - use either a trackAction or trackState call. \n// trackAction example: \n[ACPCore trackAction:@\"purchase\" data:contextData]; \n// trackState example: \n[ACPCore trackState:@\"Order Confirmation\" data:contextData];\n`}</code></pre>\n    <Variant platform=\"react-native\" task=\"products\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript-1\"\n    }}>{`JavaScript`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`//create a context data dictionary\nvar contextData = {};\n\n// add products, a purchase id, a purchase context data key, and any other data you want to collect.\n// Note the special syntax for products.\n// There are two products in this example: Running shoes and Running Socks, they are separated by a comma.\n// Attributes event1 and eVar1 only apply to Running Shoes.\ncontextData[\"&&events\"] = \"event1\";\ncontextData[\"&&products\"] = \";Running Shoes;1;69.95;event1=5.5;eVar1=Merchandising,;Running Socks;10;29.99\";\ncontextData[\"m.purchaseid\"] = \"1234567890\";\ncontextData[\"m.purchase\"] = \"1\";\n\n// send the tracking call - use either a trackAction or TrackState call.\n// trackAction example:\nACPCore.trackAction(\"purchase\", contextData);\n// trackState example:\nACPCore.trackState(\"Order Confirmation\", contextData);\n`}</code></pre>\n    <Variant platform=\"flutter\" task=\"products\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"dart-1\"\n    }}>{`Dart`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`//create a context data dictionary\nvar contextData = {};\n\n// add products, a purchase id, a purchase context data key, and any other data you want to collect.\n// Note the special syntax for products.\n// There are two products in this example: Running shoes and Running Socks, they are separated by a comma.\n// Attributes event1 and eVar1 only apply to Running Shoes.\ncontextData[\"&&events\"] = \"event1\";\ncontextData[\"&&products\"] = \";Running Shoes;1;69.95;event1=5.5;eVar1=Merchandising,;Running Socks;10;29.99\";\ncontextData[\"m.purchaseid\"] = \"1234567890\";\ncontextData[\"m.purchase\"] = \"1\";\n\n// send the tracking call - use either a trackAction or TrackState call.\n// trackAction example:\nFlutterACPCore.trackAction(\"purchase\", data: contextData);\n// trackState example:\nFlutterACPCore.trackState(\"Order Confirmation\", data: contextData);\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","Variant","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_excluded","_extends","mdxType","platform","task","repeat","parentName","isMDXComponent"],"sourceRoot":""}