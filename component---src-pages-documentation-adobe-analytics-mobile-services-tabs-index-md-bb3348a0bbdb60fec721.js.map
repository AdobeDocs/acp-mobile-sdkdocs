{"version":3,"file":"component---src-pages-documentation-adobe-analytics-mobile-services-tabs-index-md-bb3348a0bbdb60fec721.js","mappings":"2OAOsBA,E,wEADTC,EAAe,CAAC,EAKvBC,GAJgBF,EAIQ,UAJA,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5BM,EAAAA,EAAAA,KAAA,MAASH,EAClB,GAEMI,EAAc,CAClBN,aAAAA,GAEIO,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAFDC,EAAUD,EAAVC,WACGT,GAAKU,EAAAA,EAAAA,GAAAF,EAAAG,GAER,OAAOR,EAAAA,EAAAA,KAACE,GAASO,EAAAA,EAAAA,GAAA,GAAKR,EAAiBJ,EAAK,CAAES,WAAYA,EAAYI,QAAQ,eAG5EV,EAAAA,EAAAA,KAACJ,EAAO,CAACe,SAAS,UAAUC,KAAK,MAAMC,OAAO,IAAIH,QAAQ,aAC1DV,EAAAA,EAAAA,KAAA,4FACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,QAAM,SAEdA,EAAAA,EAAAA,KAAA,uFACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMc,WAAW,MAClB,UAAa,iBAAe,oDAGhCd,EAAAA,EAAAA,KAACJ,EAAO,CAACe,SAAS,MAAMC,KAAK,MAAMC,OAAO,IAAIH,QAAQ,aACtDV,EAAAA,EAAAA,KAAA,kEAA4DA,EAAAA,EAAAA,KAAA,cAAYc,WAAW,KAAG,WAAyB,mBAAmBd,EAAAA,EAAAA,KAAA,cAAYc,WAAW,KAAG,qBAAmC,UAC/Ld,EAAAA,EAAAA,KAAA,mDACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,SAAO,UAEfA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMc,WAAW,MAClB,UAAa,kBAAgB,qEAKjCd,EAAAA,EAAAA,KAAA,MACE,GAAM,eAAa,gBAErBA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMc,WAAW,MAClB,UAAa,uBAAqB,uIAOtCd,EAAAA,EAAAA,KAACJ,EAAO,CAACe,SAAS,UAAUC,KAAK,WAAWC,OAAO,IAAIH,QAAQ,aAC/DV,EAAAA,EAAAA,KAAA,MACE,GAAM,UAAQ,SAEhBA,EAAAA,EAAAA,KAAA,sBAAgBA,EAAAA,EAAAA,KAAA,cAAYc,WAAW,KAAG,oBAAkC,wBAAwBd,EAAAA,EAAAA,KAAA,cAAYc,WAAW,KAAG,cAA4B,yFAC1Jd,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMc,WAAW,MAClB,UAAa,iBAAe,kgBAoBhCd,EAAAA,EAAAA,KAACJ,EAAO,CAACe,SAAS,MAAMC,KAAK,WAAWC,OAAO,IAAIH,QAAQ,aAC3DV,EAAAA,EAAAA,KAAA,2BAAqBA,EAAAA,EAAAA,KAAA,cAAYc,WAAW,KAAG,6CAA2D,4EAC1Gd,EAAAA,EAAAA,KAAA,MACE,GAAM,WAAS,UAEjBA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMc,WAAW,MAClB,UAAa,kBAAgB,2aAajCd,EAAAA,EAAAA,KAAA,MACE,GAAM,iBAAe,gBAEvBA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMc,WAAW,MAClB,UAAa,uBAAqB,+XAWtCd,EAAAA,EAAAA,KAACJ,EAAO,CAACe,SAAS,UAAUC,KAAK,qBAAqBC,OAAO,IAAIH,QAAQ,aACzEV,EAAAA,EAAAA,KAAA,2DAAqDA,EAAAA,EAAAA,KAAA,KAAGc,WAAW,IAC/D,KAAQ,mEAAiE,uCAC7B,MAChDd,EAAAA,EAAAA,KAAA,MACE,GAAM,UAAQ,SAEhBA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQc,WAAW,KAAG,YACzBd,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMc,WAAW,MAClB,UAAa,iBAAe,2DAGhCd,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQc,WAAW,KAAG,aACzBd,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMc,WAAW,MAClB,UAAa,iBAAe,qDAGhCd,EAAAA,EAAAA,KAACJ,EAAO,CAACe,SAAS,MAAMC,KAAK,qBAAqBC,OAAO,IAAIH,QAAQ,aACrEV,EAAAA,EAAAA,KAAA,2DACAA,EAAAA,EAAAA,KAAA,qCAA+BA,EAAAA,EAAAA,KAAA,KAAGc,WAAW,IACzC,KAAQ,yLAAuL,0CAChJ,0FAA0Fd,EAAAA,EAAAA,KAAA,KAAGc,WAAW,IACvJ,KAAQ,+DACPd,EAAAA,EAAAA,KAAA,cAAYc,WAAW,KAAG,sBAAuC,UACtEd,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQc,WAAW,KAAG,YACzBd,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMc,WAAW,MAClB,UAAa,uBAAqB,mEAGtCd,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQc,WAAW,KAAG,aACzBd,EAAAA,EAAAA,KAAA,MACE,GAAM,WAAS,UAEjBA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMc,WAAW,MAClB,UAAa,kBAAgB,wXAUjCd,EAAAA,EAAAA,KAAA,MACE,GAAM,iBAAe,gBAEvBA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMc,WAAW,MAClB,UAAa,uBAAqB,6PAOtCd,EAAAA,EAAAA,KAACJ,EAAO,CAACe,SAAS,UAAUC,KAAK,oBAAoBC,OAAO,IAAIH,QAAQ,aACxEV,EAAAA,EAAAA,KAAA,0IAAoIA,EAAAA,EAAAA,KAAA,cAAYc,WAAW,KAAG,2BAAyC,gOAAgOd,EAAAA,EAAAA,KAAA,KAAGc,WAAW,IACjb,KAAQ,2JAAyJ,yDACnG,MAClEd,EAAAA,EAAAA,KAACJ,EAAO,CAACe,SAAS,MAAMC,KAAK,oBAAoBC,OAAO,IAAIH,QAAQ,aACpEV,EAAAA,EAAAA,KAAA,uFACAA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQc,WAAW,KAAG,YACzBd,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMc,WAAW,MAClB,UAAa,uBAAqB,4DAGtCd,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQc,WAAW,KAAG,aACzBd,EAAAA,EAAAA,KAAA,MACE,GAAM,WAAS,UAEjBA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMc,WAAW,MAClB,UAAa,kBAAgB,2CAGjCd,EAAAA,EAAAA,KAAA,MACE,GAAM,iBAAe,gBAEvBA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMc,WAAW,MAClB,UAAa,uBAAqB,6CAGtCd,EAAAA,EAAAA,KAACJ,EAAO,CAACe,SAAS,UAAUC,KAAK,uBAAuBC,OAAO,IAAIH,QAAQ,aAC3EV,EAAAA,EAAAA,KAAA,wBAAkBA,EAAAA,EAAAA,KAAA,cAAYc,WAAW,KAAG,uBAAqC,2FACjFd,EAAAA,EAAAA,KAAA,MACE,GAAM,UAAQ,SAEhBA,EAAAA,EAAAA,KAAA,wGAAkGA,EAAAA,EAAAA,KAAA,cAAYc,WAAW,KAAG,uBAAqC,yBACjKd,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMc,WAAW,MAClB,UAAa,gBAAc,6PAO/Bd,EAAAA,EAAAA,KAAA,iGACAA,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIc,WAAW,OAAKd,EAAAA,EAAAA,KAAA,cAAYc,WAAW,MAAI,6CAC/Cd,EAAAA,EAAAA,KAAA,MAAIc,WAAW,OAAKd,EAAAA,EAAAA,KAAA,cAAYc,WAAW,MAAI,kCAC/Cd,EAAAA,EAAAA,KAAA,MAAIc,WAAW,OAAKd,EAAAA,EAAAA,KAAA,cAAYc,WAAW,MAAI,wBAEjDd,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQc,WAAW,KAAG,aACzBd,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMc,WAAW,MAClB,UAAa,gBAAc,6TAQ/Bd,EAAAA,EAAAA,KAACJ,EAAO,CAACe,SAAS,MAAMC,KAAK,uBAAuBC,OAAO,IAAIH,QAAQ,aACvEV,EAAAA,EAAAA,KAAA,0GACAA,EAAAA,EAAAA,KAACJ,EAAO,CAACe,SAAS,UAAUC,KAAK,WAAWC,OAAO,KAAKH,QAAQ,aAChEV,EAAAA,EAAAA,KAAA,MACE,GAAM,0BAAwB,2BAEhCA,EAAAA,EAAAA,KAAA,sQACAA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQc,WAAW,KAAG,YACzBd,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMc,WAAW,MAClB,UAAa,iBAAe,wEAGhCd,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQc,WAAW,KAAG,aACzBd,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMc,WAAW,MAClB,UAAa,iBAAe,8DAGhCd,EAAAA,EAAAA,KAAA,MACE,GAAM,0BAAwB,2BAEhCA,EAAAA,EAAAA,KAAA,gOACAA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQc,WAAW,KAAG,YACzBd,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMc,WAAW,MAClB,UAAa,iBAAe,wEAGhCd,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQc,WAAW,KAAG,aACzBd,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMc,WAAW,MAClB,UAAa,iBAAe,8DAGhCd,EAAAA,EAAAA,KAACJ,EAAO,CAACe,SAAS,MAAMC,KAAK,WAAWC,OAAO,IAAIH,QAAQ,aAC3DV,EAAAA,EAAAA,KAAA,6FACAA,EAAAA,EAAAA,KAACJ,EAAO,CAACe,SAAS,UAAUC,KAAK,kBAAkBC,OAAO,IAAIH,QAAQ,aACtEV,EAAAA,EAAAA,KAAA,MACE,GAAM,UAAQ,SAEhBA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQc,WAAW,KAAG,YACzBd,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMc,WAAW,MAClB,UAAa,iBAAe,4DAGhCd,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQc,WAAW,KAAG,aACzBd,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMc,WAAW,MAClB,UAAa,iBAAe,yCAGhCd,EAAAA,EAAAA,KAACJ,EAAO,CAACe,SAAS,MAAMC,KAAK,kBAAkBC,OAAO,KAAKH,QAAQ,aACnEV,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQc,WAAW,KAAG,YACzBd,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMc,WAAW,MAClB,UAAa,uBAAqB,gEAGtCd,EAAAA,EAAAA,KAAA,MACE,GAAM,WAAS,UAEjBA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQc,WAAW,KAAG,aACzBd,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMc,WAAW,MAClB,UAAa,kBAAgB,kPASjCd,EAAAA,EAAAA,KAAA,MACE,GAAM,iBAAe,gBAEvBA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQc,WAAW,KAAG,aACzBd,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMc,WAAW,MAClB,UAAa,uBAAqB,oOAStCd,EAAAA,EAAAA,KAAA,yEAAmEA,EAAAA,EAAAA,KAAA,cAAYc,WAAW,KAAG,mBAAiC,OAAOd,EAAAA,EAAAA,KAAA,cAAYc,WAAW,KAAG,6BAA2C,wBAC1Md,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQc,WAAW,KAAG,WACzBd,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMc,WAAW,MAClB,UAAa,kBAAgB,+PASjCd,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQc,WAAW,KAAG,iBACzBd,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMc,WAAW,MAClB,UAAa,uBAAqB,8SAa1C,CAEAV,EAAWW,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/documentation/adobe-analytics-mobile-services/tabs/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/acp-mobile-sdkdocs/acp-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Variant = makeShortcode(\"Variant\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Variant platform=\"android\" task=\"add\" repeat=\"4\" mdxType=\"Variant\" />\n    <p>{`Add the Mobile Services extension to your project using the app's Gradle file.`}</p>\n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <p>{`Import the Mobile Services extension in your application's main activity.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.adobe.marketing.mobileservices.*;\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"add\" repeat=\"6\" mdxType=\"Variant\" />\n    <p>{`You can add the library to your project through your `}<inlineCode parentName=\"p\">{`Podfile`}</inlineCode>{` by adding the `}<inlineCode parentName=\"p\">{`ACPMobileServices`}</inlineCode>{` pod.`}</p>\n    <p>{`Import the library into your project:`}</p>\n    <h4 {...{\n      \"id\": \"swift\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`import ACPCore\nimport ACPAnalytics\nimport ACPMobileServices\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`#import \"ACPCore.h\"\n#import \"ACPIdentity.h\"\n#import \"ACPLifecycle.h\"\n#import \"ACPAnalytics.h\"\n#import \"ACPMobileServices.h\"\n`}</code></pre>\n    <Variant platform=\"android\" task=\"register\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-1\"\n    }}>{`Java`}</h4>\n    <p>{`Call the `}<inlineCode parentName=\"p\">{`setApplication()`}</inlineCode>{` method once in the `}<inlineCode parentName=\"p\">{`onCreate()`}</inlineCode>{` method of your main activity. For example, your code might look like the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MobileServicesApp extends Application {\n\n@Override\npublic void onCreate() {\n     super.onCreate();\n     MobileCore.setApplication(this);\n\n     try {\n             Analytics.registerExtension();\n             MobileServices.registerExtension(); //Register Mobile Services with Mobile Core\n             Lifecycle.registerExtension();\n             Identity.registerExtension();\n             MobileCore.start(null);\n     } catch (Exception e) {\n     //Log the exception\n     }\n  }\n}\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"register\" repeat=\"5\" mdxType=\"Variant\" />\n    <p>{`In your app's `}<inlineCode parentName=\"p\">{`application:didFinishLaunchingWithOptions`}</inlineCode>{` function, register the Mobile Services extension with the Mobile Core:`}</p>\n    <h4 {...{\n      \"id\": \"swift-1\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func application(_application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool{\n        ACPAnalytics.registerExtension()\n        ACPIdentity.registerExtension()\n        ACPLifecycle.registerExtension()\n        ACPMobileServices.registerExtension()\n        ACPCore.start {\n            ACPCore.lifecycleStart(nil)\n        }\n    ...\n    return true\n  }\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-1\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n   [ACPAnalytics registerExtension];\n   [ACPLifecycle registerExtension];\n   [ACPIdentity registerExtension];\n   [ACPMobileServices registerExtension];\n   [ACPCore start:nil]\n   // Override point for customization after application launch.\n   return YES;\n}\n`}</code></pre>\n    <Variant platform=\"android\" task=\"set-push-messaging\" repeat=\"6\" mdxType=\"Variant\" />\n    <p>{`Obtain the registration ID/token by using the `}<a parentName=\"p\" {...{\n        \"href\": \"https://firebase.google.com/docs/cloud-messaging/android/client\"\n      }}>{`Firebase Cloud Messaging (FCM) APIs`}</a>{`.`}</p>\n    <h4 {...{\n      \"id\": \"java-2\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`void setPushIdentifier(final String registrationID)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`MobileCore.setPushIdentifier(registrationID);\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"set-push-messaging\" repeat=\"9\" mdxType=\"Variant\" />\n    <p>{`iOS simulators do not support push messaging.`}</p>\n    <p>{`After following Apple's `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.apple.com/library/archive/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/HandlingRemoteNotifications.html#//apple_ref/doc/uid/TP40008194-CH6-SW1\"\n      }}>{`configure remote notification document`}</a>{`, to get your app ready to handle push notifications, set the push token by using the `}<a parentName=\"p\" {...{\n        \"href\": \"../mobile-core/identity/api-reference.md#setpushidentifier\"\n      }}><inlineCode parentName=\"a\">{`setPushIdentifier`}</inlineCode></a>{` API:`}</p>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) setPushIdentifier: (nullable NSData*) deviceToken;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <h4 {...{\n      \"id\": \"swift-2\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func application(_ application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) {\n    let tokenParts = deviceToken.map { data in String(format: \"%02.2hhx\", data) }\n    let token = tokenParts.joined()\n    print(\"Device Token: (token)\")\n\n    // Send push token to experience platform\n    ACPCore.setPushIdentifier(deviceToken)\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-2\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`- (void) application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken {\n  // Set the deviceToken that the APNS has assigned to the device\n  [ACPCore setPushIdentifier:deviceToken];\n  //...\n}\n`}</code></pre>\n    <Variant platform=\"android\" task=\"set-push-tracking\" repeat=\"1\" mdxType=\"Variant\" />\n    <p>{`On Android, the SDK handles push tracking to analytics without any additional set up. If the application has implemented the `}<inlineCode parentName=\"p\">{`FirebaseMessaginService`}</inlineCode>{` class and will handle the push notifications when the application is in foreground, read the push data from the received Intent and add it to the intent extras of the Activity to be launched. An example can be found in `}<a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/mobile-services_en/android/messaging-android/push-messaging/t-mob-impl-push-deeplinking-android-4x.html?lang=en\"\n      }}>{`the Mobile Services implement push messaging tutorial`}</a>{`.`}</p>\n    <Variant platform=\"ios\" task=\"set-push-tracking\" repeat=\"8\" mdxType=\"Variant\" />\n    <p>{`Use the following API to track a push messaging click in Adobe Analytics.`}</p>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) collectLaunchInfo:(NSDictionary *)userInfo;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <h4 {...{\n      \"id\": \"swift-3\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`ACPCore.collectLaunchInfo(userInfo)\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-3\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`[ACPCore collectLaunchInfo:userInfo];\n`}</code></pre>\n    <Variant platform=\"android\" task=\"set-in-app-messaging\" repeat=\"8\" mdxType=\"Variant\" />\n    <p>{`Update the `}<inlineCode parentName=\"p\">{`AndroidManifest.xml`}</inlineCode>{` file to declare the full screen activity and enable the Message Notification Handler.`}</p>\n    <h4 {...{\n      \"id\": \"java-3\"\n    }}>{`Java`}</h4>\n    <p>{`If you are using either fullscreen message or local notification functionality, update the `}<inlineCode parentName=\"p\">{`AndroidManifest.xml`}</inlineCode>{` with the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<activity\n    android:name=\"com.adobe.marketing.mobile.MessageFullScreenActivity\"\n    android:windowSoftInputMode=\"adjustUnspecified|stateHidden\" >\n</activity>\n<receiver android:name=\"com.adobe.marketing.mobile.MessageNotificationHandler\" />\n`}</code></pre>\n    <p>{`If you selected a modal layout, select one of the following themes for the message:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Theme.Translucent.NoTitleBar.Fullscreen`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Theme.Translucent.NoTitleBar`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Theme.Translucent`}</inlineCode></li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<activity\nandroid:name=\"com.adobe.marketing.mobile.MessageFullScreenActivity\"\nandroid:theme=\"@android:style/Theme.Translucent.NoTitleBar.Fullscreen\"\nandroid:windowSoftInputMode=\"adjustUnspecified|stateHidden\" >\n</activity>\n<receiver android:name=\"com.adobe.marketing.mobile.MessageNotificationHandler\" />\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"set-in-app-messaging\" repeat=\"1\" mdxType=\"Variant\" />\n    <p>{`No setup is required for iOS, since Mobile SDK automatically handles in-app message support.`}</p>\n    <Variant platform=\"android\" task=\"set-icon\" repeat=\"12\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"setsmalliconresourceid\"\n    }}>{`setSmallIconResourceId`}</h4>\n    <p>{`This API sets the small icon that is used for notifications that are created by the SDK. This icon appears in the status bar and is the secondary image that is displayed shown when the user sees the complete notification in the notification center.`}</p>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void setSmallIconResourceId(final int resourceId);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`MobileCore.setSmallIconResourceID(R.drawable.appIcon);\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"setlargeiconresourceid\"\n    }}>{`setLargeIconResourceId`}</h4>\n    <p>{`This API sets the large icon that is used for notifications that are created by the SDK. This icon is the primary image that is displayed when the user sees the complete notification in the notification center.`}</p>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void setLargeIconResourceId(final int resourceId);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`MobileCore.setLargeIconResourceId(R.drawable.appIcon);\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"set-icon\" repeat=\"1\" mdxType=\"Variant\" />\n    <p>{`No setup is required, since icons are automatically handled by the SDK for iOS.`}</p>\n    <Variant platform=\"android\" task=\"track-deep-link\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-4\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void trackAdobeDeepLink(final Uri uri)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`MobileServices.trackAdobeDeepLink\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"track-deep-link\" repeat=\"15\" mdxType=\"Variant\" />\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) trackAdobeDeepLink: (NSURL* _Nonnull) deeplink;\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"swift-4\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func application(_ application: UIApplication, open url: URL, options: [UIApplication.OpenURLOptionsKey : Any] = [:]) -> Bool {\n    ACPMobileServices.trackAdobeDeepLink(url)\n    /*\n     Handle deep link\n     */\n    return true\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-4\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`- (BOOL)application:(UIApplication *)app openURL:(NSURL *)url options:(NSDictionary<NSString *, id> *)options {\n    [ACPMobileServices trackAdobeDeepLink:url];\n    /*\n     Handle deep link\n     */\n    return YES;\n}\n`}</code></pre>\n    <p>{`In iOS 13 and later, for a scene-based application, use the `}<inlineCode parentName=\"p\">{`UISceneDelegate`}</inlineCode>{`'s `}<inlineCode parentName=\"p\">{`scene(_:openURLContexts:)`}</inlineCode>{` method as follows:`}</p>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func scene(_ scene: UIScene, openURLContexts URLContexts: Set<UIOpenURLContext>) {\n    guard let urlContexts = URLContexts.first else { return }\n    ACPMobileServices.trackAdobeDeepLink(urlContexts.url)\n    /*\n     Handle deep link\n     */\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Objective-C`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`- (void) scene:(UIScene *)scene openURLContexts:(NSSet<UIOpenURLContext *> *)URLContexts {\n    UIOpenURLContext * urlContext = URLContexts.anyObject;\n    if (urlContext != nil) {\n        [ACPMobileServices trackAdobeDeepLink:url];\n        /*\n         Handle deep link\n         */\n    }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","Variant","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_excluded","_extends","mdxType","platform","task","repeat","parentName","isMDXComponent"],"sourceRoot":""}