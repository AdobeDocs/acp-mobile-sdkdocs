"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[9189],{74098:function(e,n,a){a.r(n),a.d(n,{_frontmatter:function(){return d},default:function(){return g}});var t,i=a(87462),o=a(63366),r=(a(15007),a(64983)),p=a(91515),l=["components"],d={},s=(t="Variant",function(e){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.mdx)("div",e)}),m={_frontmatter:d},c=p.Z;function g(e){var n=e.components,a=(0,o.Z)(e,l);return(0,r.mdx)(c,(0,i.Z)({},m,a,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)(s,{platform:"android",task:"get",repeat:"10",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"java"},"Java"),(0,r.mdx)("p",null,"Adobe Experience Platform SDKs for Android supports Android 4.0 (API 14) or later."),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},"Open the mobile property you created earlier in the Data Collection UI."),(0,r.mdx)("li",{parentName:"ol"},"On your mobile property's details page, select the ",(0,r.mdx)("strong",{parentName:"li"},"Environments")," tab.")),(0,r.mdx)("p",null,"The ",(0,r.mdx)("strong",{parentName:"p"},"Environments")," tab lists the different environments where you can publish."),(0,r.mdx)("ol",{start:3},(0,r.mdx)("li",{parentName:"ol"},"In the row for the ",(0,r.mdx)("strong",{parentName:"li"},"Development")," environment, select the install package icon, as seen below:")),(0,r.mdx)("p",null,(0,r.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"57px"}},"\n      ",(0,r.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"98.24561403508773%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,r.mdx)("picture",{parentName:"span"},"\n          ",(0,r.mdx)("source",{parentName:"picture",srcSet:["/acp-mobile-sdkdocs/static/35cb11340550e85f81d338e38c3b8a5c/689c9/package.webp 57w"],sizes:"(max-width: 57px) 100vw, 57px",type:"image/webp"}),"\n          ",(0,r.mdx)("source",{parentName:"picture",srcSet:["/acp-mobile-sdkdocs/static/35cb11340550e85f81d338e38c3b8a5c/3cdff/package.png 57w"],sizes:"(max-width: 57px) 100vw, 57px",type:"image/png"}),"\n          ",(0,r.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/acp-mobile-sdkdocs/static/35cb11340550e85f81d338e38c3b8a5c/3cdff/package.png",alt:"package",title:"package",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")),(0,r.mdx)("p",null,"You should see a dialog box similar to the following:"),(0,r.mdx)("p",null,(0,r.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"840px"}},"\n      ",(0,r.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"110.00000000000001%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,r.mdx)("picture",{parentName:"span"},"\n          ",(0,r.mdx)("source",{parentName:"picture",srcSet:["/acp-mobile-sdkdocs/static/a935d6f9fd701e8aa1956cf12c6a2e78/5530d/android.webp 320w","/acp-mobile-sdkdocs/static/a935d6f9fd701e8aa1956cf12c6a2e78/0c8fb/android.webp 640w","/acp-mobile-sdkdocs/static/a935d6f9fd701e8aa1956cf12c6a2e78/a1057/android.webp 840w"],sizes:"(max-width: 840px) 100vw, 840px",type:"image/webp"}),"\n          ",(0,r.mdx)("source",{parentName:"picture",srcSet:["/acp-mobile-sdkdocs/static/a935d6f9fd701e8aa1956cf12c6a2e78/dd4a7/android.png 320w","/acp-mobile-sdkdocs/static/a935d6f9fd701e8aa1956cf12c6a2e78/0f09e/android.png 640w","/acp-mobile-sdkdocs/static/a935d6f9fd701e8aa1956cf12c6a2e78/2d81a/android.png 840w"],sizes:"(max-width: 840px) 100vw, 840px",type:"image/png"}),"\n          ",(0,r.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/acp-mobile-sdkdocs/static/a935d6f9fd701e8aa1956cf12c6a2e78/2d81a/android.png",alt:"android",title:"android",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")),(0,r.mdx)("ol",{start:4},(0,r.mdx)("li",{parentName:"ol"},"On the ",(0,r.mdx)("strong",{parentName:"li"},"Mobile Install Instructions")," dialog box, make sure you are on the ",(0,r.mdx)("strong",{parentName:"li"},"Android")," tab."),(0,r.mdx)("li",{parentName:"ol"},"Follow the instructions for using Gradle with Android.")),(0,r.mdx)("p",null,"The necessary dependencies and initialization code can be copied from the dialog box to your mobile application project."),(0,r.mdx)(s,{platform:"ios",task:"get",repeat:"8",mdxType:"Variant"}),(0,r.mdx)("p",null,"Adobe Experience Platform SDKs for iOS support ",(0,r.mdx)("strong",{parentName:"p"},"iOS 10 or later"),"; ",(0,r.mdx)("strong",{parentName:"p"},"requires")," Swift 5.1 or newer; ",(0,r.mdx)("strong",{parentName:"p"},"and")," Xcode 11.0 or newer."),(0,r.mdx)("p",null,"In order to support the new Apple M1 architecture while maintaining support for existing Intel architecture, the Adobe Experience Platform SDKs are now distributed using XCFrameworks. ",(0,r.mdx)("br",null),(0,r.mdx)("br",null),"Please see the ",(0,r.mdx)("a",{parentName:"p",href:"../release-notes/2020#december-18-2020"},"release notes")," and the document on ",(0,r.mdx)("a",{parentName:"p",href:"../resources/upgrading-to-aep/sdk-versions.md"},"current SDK versions")," for more information on the latest extension versions."),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},"Open a previously created and configured ",(0,r.mdx)("strong",{parentName:"li"},"Mobile")," property in the Data Collection UI, and select the ",(0,r.mdx)("strong",{parentName:"li"},"Environments")," tab, followed by the install package icon, as seen below.")),(0,r.mdx)("p",null,(0,r.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"57px"}},"\n      ",(0,r.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"98.24561403508773%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,r.mdx)("picture",{parentName:"span"},"\n          ",(0,r.mdx)("source",{parentName:"picture",srcSet:["/acp-mobile-sdkdocs/static/35cb11340550e85f81d338e38c3b8a5c/689c9/package.webp 57w"],sizes:"(max-width: 57px) 100vw, 57px",type:"image/webp"}),"\n          ",(0,r.mdx)("source",{parentName:"picture",srcSet:["/acp-mobile-sdkdocs/static/35cb11340550e85f81d338e38c3b8a5c/3cdff/package.png 57w"],sizes:"(max-width: 57px) 100vw, 57px",type:"image/png"}),"\n          ",(0,r.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/acp-mobile-sdkdocs/static/35cb11340550e85f81d338e38c3b8a5c/3cdff/package.png",alt:"package",title:"package",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")),(0,r.mdx)("ol",{start:2},(0,r.mdx)("li",{parentName:"ol"},"On the ",(0,r.mdx)("strong",{parentName:"li"},"Mobile Install Instructions")," dialog box, select ",(0,r.mdx)("strong",{parentName:"li"},"iOS"),"."),(0,r.mdx)("li",{parentName:"ol"},"Follow the instructions for using CocoaPods with iOS."),(0,r.mdx)("li",{parentName:"ol"},"Under the initialization code, choose Objective-C or Swift.")),(0,r.mdx)("p",null,"The necessary dependencies and initialization code can be copied from the dialog box to your app project."),(0,r.mdx)("p",null,"You should see a pop-up similar to the following image:"),(0,r.mdx)("p",null,(0,r.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"840px"}},"\n      ",(0,r.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"110.00000000000001%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,r.mdx)("picture",{parentName:"span"},"\n          ",(0,r.mdx)("source",{parentName:"picture",srcSet:["/acp-mobile-sdkdocs/static/53dd3f0b7c99095c64aadbfbcf317750/5530d/obj-c.webp 320w","/acp-mobile-sdkdocs/static/53dd3f0b7c99095c64aadbfbcf317750/0c8fb/obj-c.webp 640w","/acp-mobile-sdkdocs/static/53dd3f0b7c99095c64aadbfbcf317750/a1057/obj-c.webp 840w"],sizes:"(max-width: 840px) 100vw, 840px",type:"image/webp"}),"\n          ",(0,r.mdx)("source",{parentName:"picture",srcSet:["/acp-mobile-sdkdocs/static/53dd3f0b7c99095c64aadbfbcf317750/dd4a7/obj-c.png 320w","/acp-mobile-sdkdocs/static/53dd3f0b7c99095c64aadbfbcf317750/0f09e/obj-c.png 640w","/acp-mobile-sdkdocs/static/53dd3f0b7c99095c64aadbfbcf317750/2d81a/obj-c.png 840w"],sizes:"(max-width: 840px) 100vw, 840px",type:"image/png"}),"\n          ",(0,r.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/acp-mobile-sdkdocs/static/53dd3f0b7c99095c64aadbfbcf317750/2d81a/obj-c.png",alt:"obj c",title:"obj c",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")),(0,r.mdx)(s,{platform:"react-native",task:"get",repeat:"7",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"react-native"},"React Native"),(0,r.mdx)("p",null,"Adobe Experience Platform Mobile SDK plugin for React Native supports React Native ",(0,r.mdx)("strong",{parentName:"p"},"version 0.60.0 or later"),". For the latest installation instructions, see the ",(0,r.mdx)("inlineCode",{parentName:"p"},"README")," file in the ",(0,r.mdx)("a",{parentName:"p",href:"https://github.com/adobe/react-native-acpcore"},(0,r.mdx)("inlineCode",{parentName:"a"},"react-native-acpcore"))," repository."),(0,r.mdx)("p",null,"For React Native, you should install ",(0,r.mdx)("a",{parentName:"p",href:"https://nodejs.org"},"Node.js")," to download packages from ",(0,r.mdx)("a",{parentName:"p",href:"https://npmjs.com"},"npm"),". For additional instructions, see this ",(0,r.mdx)("a",{parentName:"p",href:"https://facebook.github.io/react-native/docs/getting-started"},"tutorial on getting started with React Native applications"),"."),(0,r.mdx)("p",null,"v2.0.0 and above of the AEP Mobile SDK React Native plugins use ",(0,r.mdx)("a",{parentName:"p",href:"https://github.com/react-native-community/cli/blob/master/docs/autolinking.md"},"autolinking"),", which links plugins' native dependencies automatically. For iOS development, after installing the plugins from npm, download the pod dependencies by running the following command:"),(0,r.mdx)("p",null,(0,r.mdx)("inlineCode",{parentName:"p"},"cd ios && pod install && cd ..")),(0,r.mdx)("p",null,"To update native dependencies to latest available versions, run the following command:"),(0,r.mdx)("p",null,(0,r.mdx)("inlineCode",{parentName:"p"},"cd ios && pod update && cd ..")),(0,r.mdx)(s,{platform:"flutter",task:"get",repeat:"3",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"flutter"},"Flutter"),(0,r.mdx)("p",null,"Adobe Experience Platform Mobile SDK plugin for Flutter supports Flutter ",(0,r.mdx)("strong",{parentName:"p"},"versions 1.10.0 or later"),"."),(0,r.mdx)("p",null,"For the latest Flutter installation instructions, see the package ",(0,r.mdx)("a",{parentName:"p",href:"https://pub.dev/packages/flutter_acpcore#-installing-tab-"},"install tab"),"."),(0,r.mdx)(s,{platform:"cordova",task:"get",repeat:"7",mdxType:"Variant"}),(0,r.mdx)("h3",{id:"cordova"},"Cordova"),(0,r.mdx)("p",null,"Adobe Experience Platform Mobile SDK plugins for Cordova supports Cordova ",(0,r.mdx)("strong",{parentName:"p"},"versions 9.0.0 or later"),". For the latest Cordova installation instructions, see the ",(0,r.mdx)("inlineCode",{parentName:"p"},"README")," file in the ",(0,r.mdx)("a",{parentName:"p",href:"https://github.com/adobe/cordova-acpcore"},(0,r.mdx)("inlineCode",{parentName:"a"},"cordova-acpcore"))," repository."),(0,r.mdx)("p",null,"For Cordova, you should install ",(0,r.mdx)("a",{parentName:"p",href:"https://nodejs.org/en/"},"Node.js")," to download packages from npm. For additional instructions, see this ",(0,r.mdx)("a",{parentName:"p",href:"https://netbeans.apache.org/kb/docs/webclient/cordova-gettingstarted.html"},"guide to get started with Cordova applications"),"."),(0,r.mdx)("p",null,"With Node.js installed, you can install the Cordova framework from terminal using the following statement:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-shell"},"sudo npm install -g cordova\n")),(0,r.mdx)("p",null,"To start using the Adobe Experience Platform Mobile SDK plugin for Cordova, navigate to the directory of your Cordova app and install the plugins using the following statement:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-shell"},"cordova plugin add https://github.com/adobe/cordova-acpcore.git\n")),(0,r.mdx)(s,{platform:"unity",task:"get",repeat:"6",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"unity"},"Unity"),(0,r.mdx)("p",null,"Adobe Experience Platform SDKs plugins for Unity supports ",(0,r.mdx)("strong",{parentName:"p"},"Unity versions 2019.3.10f1 or later")),(0,r.mdx)("p",null,"For the latest Unity installation instructions, see the README file in the ",(0,r.mdx)("a",{parentName:"p",href:"https://github.com/adobe/unity-acpcore"},"unity-acpcore")," repository."),(0,r.mdx)("p",null,"To start using the Adobe Experience Platform Mobile SDK for Unity, open your application and import the requisite Unity packages."),(0,r.mdx)("p",null,"For instance, to add the Mobile Core extension, you should:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Download ",(0,r.mdx)("a",{parentName:"li",href:"https://github.com/adobe/unity-acpcore/blob/master/bin/ACPCore-0.0.1-Unity.zip"},"ACPCore-0.0.1-Unity.zip")),(0,r.mdx)("li",{parentName:"ul"},"Unzip ",(0,r.mdx)("inlineCode",{parentName:"li"},"ACPCore-0.0.1-Unity.zip")),(0,r.mdx)("li",{parentName:"ul"},"Import ",(0,r.mdx)("inlineCode",{parentName:"li"},"ACPCore.unitypackage")," via Assets-Import Package")),(0,r.mdx)(s,{platform:"xamarin",task:"get",repeat:"3",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"xamarin"},"Xamarin"),(0,r.mdx)("p",null,"Adobe Experience Platform Mobile SDK plugins for Xamarin require ",(0,r.mdx)("strong",{parentName:"p"},"MonoAndroid 9.0+ and Xamarin.iOS 1.0+"),". For the latest Xamarin installation instructions, see the ",(0,r.mdx)("inlineCode",{parentName:"p"},"README")," file in the ",(0,r.mdx)("a",{parentName:"p",href:"https://github.com/adobe/xamarin-acpcore"},(0,r.mdx)("inlineCode",{parentName:"a"},"xamarin-acpcore"))," repository."),(0,r.mdx)("p",null,"The Adobe Experience Platform Mobile SDK plugins for Xamarin are packages distributed via ",(0,r.mdx)("a",{parentName:"p",href:"https://www.nuget.org/packages"},"nuget"),". NuGet packages can be added to projects within a ",(0,r.mdx)("a",{parentName:"p",href:"https://visualstudio.microsoft.com/downloads/"},"Visual Studio")," solution. The NuGet packages can also be generated locally via the included Makefile located in each of the Xamarin repositories."),(0,r.mdx)(s,{platform:"android",task:"add-dependencies",repeat:"3",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"java-1"},"Java"),(0,r.mdx)("p",null,"Add the dependencies to ",(0,r.mdx)("inlineCode",{parentName:"p"},"build.gradle")," for each extension."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"implementation 'com.adobe.marketing.mobile:userprofile:1.+'\nimplementation 'com.adobe.marketing.mobile:sdk-core:1.+'\n")),(0,r.mdx)(s,{platform:"ios",task:"add-dependencies",repeat:"8",mdxType:"Variant"}),(0,r.mdx)("p",null,"Create a ",(0,r.mdx)("inlineCode",{parentName:"p"},"Podfile")," if you do not already have one:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-pod"},"pod init\n")),(0,r.mdx)("p",null,"Add the dependencies to your ",(0,r.mdx)("inlineCode",{parentName:"p"},"Podfile")," for each extension."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-pod"},"use_frameworks!\npod 'ACPCore', '~> 2.0'\npod 'ACPUserProfile', '~> 2.0'\n")),(0,r.mdx)("p",null,"If Cocoapods cannot not find the dependencies, you may need to run this command:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-pod"},"pod repo update\n")),(0,r.mdx)("p",null,"Save the ",(0,r.mdx)("inlineCode",{parentName:"p"},"Podfile")," and run install:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-pod"},"pod install\n")),(0,r.mdx)(s,{platform:"android",task:"add-initialization",repeat:"3",mdxType:"Variant"}),(0,r.mdx)("p",null,"After you register the extensions, call the ",(0,r.mdx)("inlineCode",{parentName:"p"},"start")," API in Mobile Core to initialize the SDK as shown below. This step is required to boot up the SDK for event processing. The following code snippet is provided as a sample reference."),(0,r.mdx)("h4",{id:"java-2"},"Java"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},'import com.adobe.marketing.mobile.AdobeCallback;\nimport com.adobe.marketing.mobile.Identity;\nimport com.adobe.marketing.mobile.InvalidInitException;\nimport com.adobe.marketing.mobile.Lifecycle;\nimport com.adobe.marketing.mobile.LoggingMode;\nimport com.adobe.marketing.mobile.MobileCore;\nimport com.adobe.marketing.mobile.Signal;\nimport com.adobe.marketing.mobile.UserProfile;\n...\nimport android.app.Application;\n...\npublic class MainApp extends Application {\n  ...\n  @Override\n  public void on Create(){\n    super.onCreate();\n    MobileCore.setApplication(this);\n        MobileCore.setLogLevel(LoggingMode.DEBUG);\n    ...\n    try {\n      UserProfile.registerExtension();\n            Identity.registerExtension();\n            Lifecycle.registerExtension();\n            Signal.registerExtension();\n            MobileCore.start(new AdobeCallback () {\n            @Override\n            public void call(Object o) {\n            MobileCore.configureWithAppID("<your_environment_id_from_Launch>");\n    }\n});\n    } catch (InvalidInitException e) {\n      ...\n    }\n  }\n}\n')),(0,r.mdx)(s,{platform:"ios",task:"add-initialization",repeat:"5",mdxType:"Variant"}),(0,r.mdx)("p",null,"The following snippet shows an example of how to add the initialization code. Note that this may need to be adjusted, depending on how your application is structured."),(0,r.mdx)("h4",{id:"swift"},"Swift"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},'import ACPCore\nimport ACPUserProfile\n...\n@UIApplicationMain\nclass AppDelegate: UIResponder, UIApplicationDelegate {\n  var window: UIWindow?\n  func application(_application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool{\n    ACPCore.setLogLevel(.debug)\n        ACPCore.configure(withAppId: "<your_environment_id_from_Launch>")\n    ...\n    ACPUserProfile.registerExtension()\n        ACPIdentity.registerExtension()\n        ACPLifecycle.registerExtension()\n        ACPSignal.registerExtension()\n        ACPCore.start {\n        ACPCore.lifecycleStart(nil)\n        }\n    ...\n    return true\n  }\n}\n')),(0,r.mdx)("h4",{id:"objective-c"},"Objective-C"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},'#import "AppDelegate.h"\n#import "ACPCore.h"\n#import "ACPUserProfile.h"\n#import "ACPIdentity.h"\n#import "ACPLifecycle.h"\n#import "ACPSignal.h"\n...\n@implementation AppDelegate\n-(BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n  [ACPCore setLogLevel:ACPMobileLogLevelDebug];\n  [ACPCore configureWithAppId:@"<your_environment_id_from_Launch>"];\n    ...\n  [ACPUserProfile registerExtension];\n    [ACPIdentity registerExtension];\n    [ACPLifecycle registerExtension];\n    [ACPSignal registerExtension];\n    const UIApplicationState appState = application.applicationState;\n    [ACPCore start:^{\n      // only start lifecycle if the application is not in the background\n      if (appState != UIApplicationStateBackground) {\n        [ACPCore lifecycleStart:nil];\n      }\n    }];\n    ...\n  return YES;\n}\n\n@end\n')),(0,r.mdx)(s,{platform:"react-native",task:"add-initialization",repeat:"5",mdxType:"Variant"}),(0,r.mdx)("p",null,"For React Native apps, initialize the SDK using native code in your ",(0,r.mdx)("inlineCode",{parentName:"p"},"AppDelegate")," (iOS) and ",(0,r.mdx)("inlineCode",{parentName:"p"},"MainApplication")," (Android)."),(0,r.mdx)("h4",{id:"ios"},"iOS"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},'#import "ACPCore.h"\n#import "ACPUserProfile.h"\n#import "ACPIdentity.h"\n#import "ACPLifecycle.h"\n#import "ACPSignal.h"\n...\n@implementation AppDelegate\n-(BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    [ACPCore setLogLevel:ACPMobileLogLevelDebug];\n    [ACPCore configureWithAppId:@"<your_environment_id_from_Launch>"];\n    [ACPUserProfile registerExtension];\n    [ACPIdentity registerExtension];\n    [ACPLifecycle registerExtension];\n    [ACPSignal registerExtension];\n\n    const UIApplicationState appState = application.applicationState;\n    [ACPCore start:^{\n      // only start lifecycle if the application is not in the background\n      if (appState != UIApplicationStateBackground) {\n        [ACPCore lifecycleStart:nil];\n      }\n    }];\n    ...\n  return YES;\n}\n\n@end\n')),(0,r.mdx)("h4",{id:"android"},"Android"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},'import com.adobe.marketing.mobile.AdobeCallback;\nimport com.adobe.marketing.mobile.Identity;\nimport com.adobe.marketing.mobile.InvalidInitException;\nimport com.adobe.marketing.mobile.Lifecycle;\nimport com.adobe.marketing.mobile.LoggingMode;\nimport com.adobe.marketing.mobile.MobileCore;\nimport com.adobe.marketing.mobile.Signal;\nimport com.adobe.marketing.mobile.UserProfile;\n...\nimport android.app.Application;\n...\npublic class MainApplication extends Application implements ReactApplication {\n  ...\n  @Override\n  public void on Create(){\n    super.onCreate();\n    ...\n    MobileCore.setApplication(this);\n    MobileCore.setLogLevel(LoggingMode.DEBUG);\n    MobileCore.setWrapperType(WrapperType.REACT_NATIVE);\n\n    try {\n      UserProfile.registerExtension();\n      Identity.registerExtension();\n      Lifecycle.registerExtension();\n      Signal.registerExtension();\n      MobileCore.start(new AdobeCallback () {\n          @Override\n          public void call(Object o) {\n            MobileCore.configureWithAppID("<your_environment_id_from_Launch>");\n         }\n      });\n    } catch (InvalidInitException e) {\n      ...\n    }\n  }\n}\n')),(0,r.mdx)(s,{platform:"flutter",task:"add-initialization",repeat:"3",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"dart"},"Dart"),(0,r.mdx)("p",null,"For Flutter apps, initialize the SDK using native code in your ",(0,r.mdx)("inlineCode",{parentName:"p"},"AppDelegate")," and ",(0,r.mdx)("inlineCode",{parentName:"p"},"MainApplication")," in iOS and Android, respectively."),(0,r.mdx)("p",null,"The initialization code is located in the ",(0,r.mdx)("a",{parentName:"p",href:"https://github.com/adobe/flutter_acpcore"},"Flutter ACPCore Github README"),"."),(0,r.mdx)(s,{platform:"cordova",task:"add-initialization",repeat:"5",mdxType:"Variant"}),(0,r.mdx)("p",null,"For Cordova apps, initialize the SDK using native code in your ",(0,r.mdx)("inlineCode",{parentName:"p"},"AppDelegate")," and ",(0,r.mdx)("inlineCode",{parentName:"p"},"MainApplication")," in iOS and Android, respectively."),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"iOS")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-text"},'// Import the SDK\n#import "ACPCore.h"\n#import "ACPLifecycle.h"\n#import "ACPIdentity.h"\n#import "ACPSignal.h"\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {  \n  // make sure to set the wrapper type at the beginning of initialization\n  [ACPCore setWrapperType:ACPMobileWrapperTypeCordova];\n\n  //...\n  [ACPCore configureWithAppId:@"yourAppId"];\n  [ACPIdentity registerExtension];\n  [ACPLifecycle registerExtension];\n  [ACPSignal registerExtension];\n  // Register any additional extensions\n\n  [ACPCore start:nil];\n}\n')),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Android")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},'// Import the SDK\nimport com.adobe.marketing.mobile.MobileCore;\nimport com.adobe.marketing.mobile.Identity;\nimport com.adobe.marketing.mobile.Lifecycle;\nimport com.adobe.marketing.mobile.Signal;\nimport com.adobe.marketing.mobile.WrapperType;\n\n@Override\npublic void onCreate() {\n  //...\n  MobileCore.setApplication(this);\n  MobileCore.configureWithAppID("yourAppId");\n\n  // make sure to set the wrapper type at the beginning of initialization\n  MobileCore.setWrapperType(WrapperType.CORDOVA);\n\n  try {\n    Identity.registerExtension();\n    Lifecycle.registerExtension();\n    Signal.registerExtension();\n\n    // Register any additional extensions\n  } catch (Exception e) {\n    // handle exception\n  }\n\n  MobileCore.start(null);\n}\n')),(0,r.mdx)(s,{platform:"unity",task:"add-initialization",repeat:"3",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"c"},"C#"),(0,r.mdx)("p",null,"For Unity apps, initialize the SDK using the following code in the start function of the ",(0,r.mdx)("inlineCode",{parentName:"p"},"MainScript"),"."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-csharp"},'using com.adobe.marketing.mobile;\nusing using AOT;\n\npublic class MainScript : MonoBehaviour\n{\n    [MonoPInvokeCallback(typeof(AdobeStartCallback))]\n    public static void HandleStartAdobeCallback()\n    {   \n        ACPCore.ConfigureWithAppID("1423ae38-8385-8963-8693-28375403491d");\n    }\n\n    // Start is called before the first frame update\n    void Start()\n    {   \n        if (Application.platform == RuntimePlatform.Android) {\n            ACPCore.SetApplication();\n        }\n\n        ACPCore.SetLogLevel(ACPCore.ACPMobileLogLevel.VERBOSE);\n        ACPCore.SetWrapperType();\n        ACPIdentity.registerExtension();\n        ACPLifecycle.registerExtension();\n        ACPSignal.registerExtension();\n        ACPCore.Start(HandleStartAdobeCallback);\n    }\n}\n')),(0,r.mdx)(s,{platform:"xamarin",task:"add-initialization",repeat:"6",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"c-1"},"C#"),(0,r.mdx)("p",null,"For Xamarin Forms applications, the SDK initialization differs, depending on the platform being targeted."),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"iOS")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-csharp"},'using Com.Adobe.Marketing.Mobile;\n\n[Register("AppDelegate")]\npublic partial class AppDelegate : global::Xamarin.Forms.Platform.iOS.FormsApplicationDelegate\n{\n  //\n  // This method is invoked when the application has loaded and is ready to run. In this\n  // method you should instantiate the window, load the UI into it and then make the window\n  // visible.\n  //\n  // You have 17 seconds to return from this method, or iOS will terminate your application.\n  //\n  public override bool FinishedLaunching(UIApplication app, NSDictionary options)\n  {\n    global::Xamarin.Forms.Forms.Init();\n    LoadApplication(new App());\n\n    // set the wrapper type\n    ACPCore.SetWrapperType(ACPMobileWrapperType.Xamarin);\n\n    // set launch config\n    ACPCore.ConfigureWithAppID("your-app-id");\n\n    // register SDK extensions\n    ACPIdentity.RegisterExtension();\n    ACPLifecycle.RegisterExtension();\n    ACPSignal.RegisterExtension();\n\n    // start core\n    ACPCore.Start(null);\n  }\n')),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Android")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-csharp"},'using Com.Adobe.Marketing.Mobile;\n\n[Activity(Label = "TestApp", Icon = "@mipmap/icon", Theme = "@style/MainTheme", MainLauncher = true, ConfigurationChanges = ConfigChanges.ScreenSize | ConfigChanges.Orientation)]\npublic class MainActivity : global::Xamarin.Forms.Platform.Android.FormsAppCompatActivity\n{\n  protected override void OnCreate(Bundle savedInstanceState)\n  {\n    base.OnCreate(savedInstanceState);\n\n    global::Xamarin.Forms.Forms.Init(this, savedInstanceState);\n    LoadApplication(new App());\n\n    // set the wrapper type\n    ACPCore.SetWrapperType(WrapperType.Xamarin);\n\n    // register SDK extensions\n    ACPCore.Application = this.Application;\n    ACPIdentity.RegisterExtension();\n    ACPLifecycle.RegisterExtension();\n    ACPSignal.RegisterExtension();\n\n    // start core\n    ACPCore.Start(null);\n}\n')))}g.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-documentation-getting-started-tabs-get-the-sdk-md-99dc20c5d55e12373c27.js.map