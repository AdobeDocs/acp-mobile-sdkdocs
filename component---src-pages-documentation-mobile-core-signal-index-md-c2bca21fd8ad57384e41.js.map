{"version":3,"file":"component---src-pages-documentation-mobile-core-signal-index-md-c2bca21fd8ad57384e41.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/documentation/mobile-core/signal/index.md","webpack://dev-site-documentation-template/./src/pages/documentation/mobile-core/signal/tabs/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/acp-mobile-sdkdocs/acp-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Tabs from './tabs/index.md';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Media = makeShortcode(\"Media\");\nconst TabsBlock = makeShortcode(\"TabsBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"signal\"\n    }}>{`Signal`}</h1>\n    <p>{`The Signal extension allows marketers to send a \"signal\" to their apps through the Adobe Experience Platform Mobile SDKs. This signal might tell the Mobile SDKs or the apps to complete tasks, such as send PII-labeled data, to trigger a postback to a third-party ad-network and open an app deep link or URL. To ensure that signals are sent or are activated, the marketers need to configure triggers and traits in the Data Collection UI.`}</p>\n    <p>{`The Signal extension is bundled with the `}<a parentName=\"p\" {...{\n        \"href\": \"../index.md\"\n      }}>{`MobileCore (Android)/ACPCore (iOS)`}</a>{` extension and allows you to send postbacks to third-party endpoints and open URLs, such as web URLs or application deep links, when using rules actions in the Data Collection UI.`}</p>\n    <p>{`To send PII data to external destinations, the `}<inlineCode parentName=\"p\">{`PII`}</inlineCode>{` action can trigger the Rules Engine when certain triggers and traits match. When setting a rule, you can also set the `}<inlineCode parentName=\"p\">{`PII`}</inlineCode>{` action for a Signal event. The `}<inlineCode parentName=\"p\">{`collectPii`}</inlineCode>{` API can then be used to trigger the rule and send the PII data to a remote server.`}</p>\n    <p>{`To get started with Signal extension, complete the following steps:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Add the `}<strong parentName=\"li\">{`Signal`}</strong>{` extension to your app.`}</li>\n      <li parentName=\"ol\">{`Define the necessary rules in the Data Collection UI. `}</li>\n      <li parentName=\"ol\">{`(Optional) When using Send PII actions in the Data Collection UI, implement the APIs to collect PII data and send it to the configured third party destination.`}</li>\n    </ol>\n    <p>{`For more information about creating and configuring a rule in the Data Collection UI, see `}<a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/experience-platform/tags/ui/rules.html\"\n      }}>{`Rules`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"watch-the-video\"\n    }}>{`Watch the video`}</h2>\n    <Media slots=\"video\" mdxType=\"Media\" />\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.youtube.com/watch?v=r-z9ivQjzOY\"\n      }}>{`https://www.youtube.com/watch?v=r-z9ivQjzOY`}</a></p>\n    <h2 {...{\n      \"id\": \"add-the-signal-extension-to-your-app\"\n    }}>{`Add the Signal extension to your app`}</h2>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"6\" mdxType=\"TabsBlock\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&task=add\" mdxType=\"Tabs\" />\n    <p>{`React Native`}</p>\n    <Tabs query=\"platform=react-native&task=add\" mdxType=\"Tabs\" />\n    <p>{`Flutter`}</p>\n    <Tabs query=\"platform=flutter&task=add\" mdxType=\"Tabs\" />\n    <p>{`Cordova`}</p>\n    <Tabs query=\"platform=cordova&task=add\" mdxType=\"Tabs\" />\n    <p>{`Unity`}</p>\n    <Tabs query=\"platform=unity&task=add\" mdxType=\"Tabs\" />\n    <p>{`Xamarin`}</p>\n    <Tabs query=\"platform=xamarin&task=add\" mdxType=\"Tabs\" />\n    <h2 {...{\n      \"id\": \"register-the-signal-extension\"\n    }}>{`Register the Signal extension`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`registerExtension()`}</inlineCode>{` API registers the Signal extension with the Mobile Core extension. This API allows the extension to send and receive events to and from the Mobile SDK.`}</p>\n    <p>{`To register the Identity extension, use the following code sample:`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"6\" mdxType=\"TabsBlock\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&task=register\" mdxType=\"Tabs\" />\n    <p>{`React Native`}</p>\n    <Tabs query=\"platform=react-native&task=register\" mdxType=\"Tabs\" />\n    <p>{`Flutter`}</p>\n    <Tabs query=\"platform=flutter&task=register\" mdxType=\"Tabs\" />\n    <p>{`Cordova`}</p>\n    <Tabs query=\"platform=cordova&task=register\" mdxType=\"Tabs\" />\n    <p>{`Unity`}</p>\n    <Tabs query=\"platform=unity&task=register\" mdxType=\"Tabs\" />\n    <p>{`Xamarin`}</p>\n    <Tabs query=\"platform=xamarin&task=register\" mdxType=\"Tabs\" />\n    <h2 {...{\n      \"id\": \"implement-the-mobile-sdk-to-send-pii-data-to-external-destinations\"\n    }}>{`Implement the Mobile SDK to send PII data to external destinations`}</h2>\n    <p>{`To send PII data to external destinations, the `}<inlineCode parentName=\"p\">{`PII`}</inlineCode>{` action can trigger the Rules Engine when the configured triggers and traits match. When creating a rule, you can set the `}<inlineCode parentName=\"p\">{`PII`}</inlineCode>{` action for a Signal event, so that `}<inlineCode parentName=\"p\">{`collectPii`}</inlineCode>{` can trigger the rule and send the `}<inlineCode parentName=\"p\">{`PII`}</inlineCode>{` data.`}</p>\n    <p>{`For more information about `}<inlineCode parentName=\"p\">{`collectPii`}</inlineCode>{` and its usage, see `}<a parentName=\"p\" {...{\n        \"href\": \"../api-reference.md#collect-pii\"\n      }}>{`collectPii`}</a>{`.`}</p>\n    <p>{`For more information about how to configure the Signal postbacks in the Data Collection UI, see `}<a parentName=\"p\" {...{\n        \"href\": \"../../user-guides/rules-engine-integration\"\n      }}>{`Signal extension and Rules Engine integration`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/acp-mobile-sdkdocs/acp-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Variant = makeShortcode(\"Variant\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Variant platform=\"android\" task=\"add\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <p>{`Add the `}<a parentName=\"p\" {...{\n        \"href\": \"../index.md\"\n      }}>{`Mobile Core`}</a>{` extension to your project using the app's Gradle file.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`implementation 'com.adobe.marketing.mobile:sdk-core:1.+'\n`}</code></pre>\n    <p>{`Import the Signal extension in your application's main activity.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.adobe.marketing.mobile.*;\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"add\" repeat=\"9\" mdxType=\"Variant\" />\n    <p>{`​The Signal extension is included in the Mobile Core extension. Add the `}<a parentName=\"p\" {...{\n        \"href\": \"../index.md\"\n      }}>{`Mobile Core`}</a>{` extension to your project using Cocoapods.`}</p>\n    <p>{`Add following pods in your `}<inlineCode parentName=\"p\">{`Podfile`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-pod\"\n      }}>{`pod 'ACPCore', '~> 2.0'\n`}</code></pre>\n    <p>{`Import the Signal libraries:`}</p>\n    <h4 {...{\n      \"id\": \"objective-c\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`#import \"ACPCore.h\"\n#import \"ACPSignal.h\"\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"swift\"\n    }}>{`Swift`}</h4>\n    <p>{`In Swift, the ACPCore includes ACPSignal:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`import ACPCore\n`}</code></pre>\n    <Variant platform=\"react-native\" task=\"add\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript\"\n    }}>{`JavaScript`}</h4>\n    <p>{`Importing the Signal extension:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import {ACPSignal} from '@adobe/react-native-acpcore';\n`}</code></pre>\n    <Variant platform=\"flutter\" task=\"add\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"dart\"\n    }}>{`Dart`}</h4>\n    <p>{`Importing the Signal extension:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`import 'package:flutter_acpcore/flutter_acpsignal.dart';\n`}</code></pre>\n    <Variant platform=\"cordova\" task=\"add\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"cordova\"\n    }}>{`Cordova`}</h4>\n    <p>{`After creating your Cordova app and adding the Android and iOS platforms, the Signal extension for Cordova can be added with this command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`cordova plugin add https://github.com/adobe/cordova-acpcore.git\n`}</code></pre>\n    <Variant platform=\"unity\" task=\"add\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c\"\n    }}>{`C#`}</h4>\n    <p>{`After importing the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/adobe/unity-acpcore/blob/master/bin/ACPCore-0.0.1-Unity.zip\"\n      }}>{`ACPCore.unitypackage`}</a>{`, the Signal extension for Unity can be added with following code in the MainScript`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using com.adobe.marketing.mobile;\n`}</code></pre>\n    <Variant platform=\"xamarin\" task=\"add\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-1\"\n    }}>{`C#`}</h4>\n    <p>{`After adding the iOS ACPCore NuGet package or the Android ACPSignal NuGet package, the Signal extension can be added by this import statement`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using Com.Adobe.Marketing.Mobile;\n`}</code></pre>\n    <Variant platform=\"android\" task=\"register\" repeat=\"4\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-1\"\n    }}>{`Java`}</h4>\n    <p>{`After calling the `}<inlineCode parentName=\"p\">{`setApplication()`}</inlineCode>{` method in the `}<inlineCode parentName=\"p\">{`onCreate()`}</inlineCode>{` method, register the Signal extension. If the registration was not successful, an `}<inlineCode parentName=\"p\">{`InvalidInitException`}</inlineCode>{` is thrown.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MobileApp extends Application {\n\n    @Override\n    public void onCreate() {\n        super.onCreate();\n        MobileCore.setApplication(this);\n        try {\n            Signal.registerExtension();\n            // register other extensions\n            MobileCore.start(new AdobeCallback () {\n                @Override\n                public void call(Object o) {\n                    MobileCore.configureWithAppID(\"yourAppId\");\n                }\n            });    \n        } catch (Exception e) {\n            //Log the exception\n         }\n    }\n}\n`}</code></pre>\n    <p>{`Please note that the Signal extension is automatically included in the Mobile Core extension by Maven. When you manually install the Signal extension, ensure that you add the `}<inlineCode parentName=\"p\">{`signal-1.x.x.aar`}</inlineCode>{` library to your project.`}</p>\n    <Variant platform=\"ios\" task=\"register\" repeat=\"6\" mdxType=\"Variant\" />\n    <p>{`In your app's`}<inlineCode parentName=\"p\">{`application:didFinishLaunchingWithOptions`}</inlineCode>{`, register the Signal extension with Mobile Core:`}</p>\n    <h4 {...{\n      \"id\": \"objective-c-1\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    [ACPCore configureWithAppId:@\"yourAppId\"];\n    [ACPSignal registerExtension];\n    [ACPCore start:nil];\n    // Override point for customization after application launch.\n    return YES;\n }\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"swift-1\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n     ACPCore.configure(withAppId: \"yourAppId\")   \n     ACPSignal.registerExtension()\n     ACPCore.start(nil)\n     // Override point for customization after application launch.\n     return true;\n}\n`}</code></pre>\n    <p>{`Please note that the Signal extension is automatically included in the Mobile Core pod. When you manually install the Signal extension, ensure that you add the `}<inlineCode parentName=\"p\">{`libACPSignal_iOS.a`}</inlineCode>{` library to your project.`}</p>\n    <Variant platform=\"react-native\" task=\"register\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript-1\"\n    }}>{`JavaScript`}</h4>\n    <p>{`When using React Native, registering Signal with Mobile Core should be done in native code which is shown under the Android and iOS tabs.`}</p>\n    <Variant platform=\"flutter\" task=\"register\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"dart-1\"\n    }}>{`Dart`}</h4>\n    <p>{`When using Flutter, registering Signal with Mobile Core should be done in native code which is shown under the Android and iOS tabs.`}</p>\n    <Variant platform=\"cordova\" task=\"register\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"cordova-1\"\n    }}>{`Cordova`}</h4>\n    <p>{`When using Cordova, registering Signal with Mobile Core must be done in native code which is shown under the Android and iOS tabs.`}</p>\n    <Variant platform=\"unity\" task=\"register\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-2\"\n    }}>{`C#`}</h4>\n    <p>{`Register the extension in the `}<inlineCode parentName=\"p\">{`start()`}</inlineCode>{` function:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`void Start()\n{   \n  ACPSignal.RegisterExtension();\n}\n`}</code></pre>\n    <Variant platform=\"xamarin\" task=\"register\" repeat=\"7\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-3\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`iOS`}</strong></p>\n    <p>{`Register the Signal extension with the Mobile Core by adding the following to your app's `}<inlineCode parentName=\"p\">{`FinishedLaunching:`}</inlineCode>{` delegate method:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public override bool FinishedLaunching(UIApplication app, NSDictionary options)\n{\n  ACPSignal.RegisterExtension();\n  // start Mobile Core\n  ACPCore.Start(startCallback);\n\n  return base.FinishedLaunching(app, options);\n}\n\nprivate void startCallback()\n{\n  // set app id from the Data Collection UI\n  ACPCore.ConfigureWithAppID(\"yourAppId\");\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Android`}</strong></p>\n    <p>{`Register the Signal extension with the Mobile Core by adding the following to your app's `}<inlineCode parentName=\"p\">{`OnCreate:`}</inlineCode>{` method:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`protected override void OnCreate(Bundle savedInstanceState)\n{\n  base.OnCreate(savedInstanceState);\n    LoadApplication(new App());\n  ACPCore.Application = this.Application;\n  ACPSignal.RegisterExtension();\n  // start Mobile Core\n  ACPCore.Start(new CoreStartCompletionCallback());\n}\n\nclass CoreStartCompletionCallback : Java.Lang.Object, IAdobeCallback\n{\n  public void Call(Java.Lang.Object callback)\n  {\n  // set app id from the Data Collection UI\n    ACPCore.ConfigureWithAppID(\"yourAppId\");\n  }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","mdx","Media","TabsBlock","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_excluded","_extends","mdxType","parentName","slots","orientation","repeat","Tabs","query","isMDXComponent","Variant","platform","task"],"sourceRoot":""}