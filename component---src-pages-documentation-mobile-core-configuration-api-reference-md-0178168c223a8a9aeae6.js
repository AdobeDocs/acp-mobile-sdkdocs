"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[8724,649],{9530:function(e,a,n){n.r(a),n.d(a,{_frontmatter:function(){return l},default:function(){return f}});var t=n(87462),r=n(63366),i=(n(15007),n(64983)),p=n(91515),o=n(77608),d=n(40901),m=["components"],l={},x=function(e){return function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.mdx)("div",a)}},u=x("TabsBlock"),s=x("InlineAlert"),c={_frontmatter:l},g=p.Z;function f(e){var a=e.components,n=(0,r.Z)(e,m);return(0,i.mdx)(g,(0,t.Z)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,i.mdx)("h1",{id:"configuration-api-reference"},"Configuration API reference"),(0,i.mdx)(d.default,{query:"platform=outdated-version&componentClass=InlineNestedAlert",mdxType:"Alerts"}),(0,i.mdx)("h2",{id:"configurewithappid"},"configureWithAppID"),(0,i.mdx)("p",null,"This API causes the SDK to download the configuration for the provided app ID and apply the configuration to the current session."),(0,i.mdx)(u,{orientation:"horizontal",slots:"heading, content",repeat:"4",mdxType:"TabsBlock"}),(0,i.mdx)("p",null,"Android"),(0,i.mdx)(o.default,{query:"platform=android&api=configure-with-app-id",mdxType:"Tabs"}),(0,i.mdx)("p",null,"iOS"),(0,i.mdx)(o.default,{query:"platform=ios&api=configure-with-app-id",mdxType:"Tabs"}),(0,i.mdx)("p",null,"Unity"),(0,i.mdx)(o.default,{query:"platform=unity&api=configure-with-app-id",mdxType:"Tabs"}),(0,i.mdx)("p",null,"Xamarin"),(0,i.mdx)(o.default,{query:"platform=xamarin&api=configure-with-app-id",mdxType:"Tabs"}),(0,i.mdx)("h2",{id:"configurewithfileinassets"},"configureWithFileInAssets"),(0,i.mdx)(s,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,i.mdx)("p",null,"This API is only available in Android and was added in Android was added in Android Core version 1.7.0."),(0,i.mdx)("p",null,"You can bundle a JSON configuration file in the app's Assets folder to replace or complement the configuration that was downloaded by using the ",(0,i.mdx)("a",{parentName:"p",href:"./index.md#configure-with-app-id-per-environment"},"Configure with App ID per environment")," approach."),(0,i.mdx)(u,{orientation:"horizontal",slots:"heading, content",repeat:"1",mdxType:"TabsBlock"}),(0,i.mdx)("p",null,"Android"),(0,i.mdx)(o.default,{query:"platform=android&api=configure-with-file-in-assets",mdxType:"Tabs"}),(0,i.mdx)("h2",{id:"configurewithfileinpath"},"configureWithFileInPath"),(0,i.mdx)("p",null,"You can include a bundled JSON configuration file in your app package to replace or complement the configuration that was downloaded by using the ",(0,i.mdx)("a",{parentName:"p",href:"./index.md#configure-with-app-id-per-environment"},"Configure with App ID per environment")," approach."),(0,i.mdx)("p",null,"To pass in a bundled path and file name:"),(0,i.mdx)(u,{orientation:"horizontal",slots:"heading, content",repeat:"3",mdxType:"TabsBlock"}),(0,i.mdx)("p",null,"Android"),(0,i.mdx)(o.default,{query:"platform=android&api=configure-with-file-in-path",mdxType:"Tabs"}),(0,i.mdx)("p",null,"iOS"),(0,i.mdx)(o.default,{query:"platform=ios&api=configure-with-file-in-path",mdxType:"Tabs"}),(0,i.mdx)("p",null,"Xamarin"),(0,i.mdx)(o.default,{query:"platform=xamarin&api=configure-with-file-in-path",mdxType:"Tabs"}),(0,i.mdx)("h2",{id:"extensionversion"},"extensionVersion"),(0,i.mdx)("p",null,"The ",(0,i.mdx)("inlineCode",{parentName:"p"},"extensionVersion()")," API returns the version of the Configuration extension."),(0,i.mdx)("p",null,"To get the version of the Configuration extension, use the following code sample:"),(0,i.mdx)(u,{orientation:"horizontal",slots:"heading, content",repeat:"7",mdxType:"TabsBlock"}),(0,i.mdx)("p",null,"Android"),(0,i.mdx)(o.default,{query:"platform=android&api=extension-version",mdxType:"Tabs"}),(0,i.mdx)("p",null,"iOS"),(0,i.mdx)(o.default,{query:"platform=ios&api=extension-version",mdxType:"Tabs"}),(0,i.mdx)("p",null,"React Native"),(0,i.mdx)(o.default,{query:"platform=react-native&api=extension-version",mdxType:"Tabs"}),(0,i.mdx)("p",null,"Flutter"),(0,i.mdx)(o.default,{query:"platform=flutter&api=extension-version",mdxType:"Tabs"}),(0,i.mdx)("p",null,"Cordova"),(0,i.mdx)(o.default,{query:"platform=cordova&api=extension-version",mdxType:"Tabs"}),(0,i.mdx)("p",null,"Unity"),(0,i.mdx)(o.default,{query:"platform=unity&api=extension-version",mdxType:"Tabs"}),(0,i.mdx)("p",null,"Xamarin"),(0,i.mdx)(o.default,{query:"platform=xamarin&api=extension-version",mdxType:"Tabs"}),(0,i.mdx)("h2",{id:"updateconfiguration"},"updateConfiguration"),(0,i.mdx)("p",null,"You can also update the configuration programmatically by passing configuration keys and values to override the existing configuration."),(0,i.mdx)(s,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,i.mdx)("p",null,"Keys that are not found on the current configuration are added when this method is followed. Null values are allowed and replace existing configuration values."),(0,i.mdx)(s,{variant:"warning",slots:"text",mdxType:"InlineAlert"}),(0,i.mdx)("p",null,"Do not use this API to update the ",(0,i.mdx)("inlineCode",{parentName:"p"},"build.environment")," key or any key with an environment prefix, because it can lead to unexpected behaviors. For more information, read ",(0,i.mdx)("a",{parentName:"p",href:"./index.md#environment-aware-configuration-properties"},"Environment-aware configuration properties"),"."),(0,i.mdx)(u,{orientation:"horizontal",slots:"heading, content",repeat:"7",mdxType:"TabsBlock"}),(0,i.mdx)("p",null,"Android"),(0,i.mdx)(o.default,{query:"platform=android&api=update-configuration",mdxType:"Tabs"}),(0,i.mdx)("p",null,"iOS"),(0,i.mdx)(o.default,{query:"platform=ios&api=update-configuration",mdxType:"Tabs"}),(0,i.mdx)("p",null,"React Native"),(0,i.mdx)(o.default,{query:"platform=react-native&api=update-configuration",mdxType:"Tabs"}),(0,i.mdx)("p",null,"Flutter"),(0,i.mdx)(o.default,{query:"platform=flutter&api=update-configuration",mdxType:"Tabs"}),(0,i.mdx)("p",null,"Cordova"),(0,i.mdx)(o.default,{query:"platform=cordova&api=update-configuration",mdxType:"Tabs"}),(0,i.mdx)("p",null,"Unity"),(0,i.mdx)(o.default,{query:"platform=unity&api=update-configuration",mdxType:"Tabs"}),(0,i.mdx)("p",null,"Xamarin"),(0,i.mdx)(o.default,{query:"platform=xamarin&api=update-configuration",mdxType:"Tabs"}))}f.isMDXComponent=!0},77608:function(e,a,n){n.r(a),n.d(a,{_frontmatter:function(){return m},default:function(){return s}});var t,r=n(87462),i=n(63366),p=(n(15007),n(64983)),o=n(91515),d=["components"],m={},l=(t="Variant",function(e){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,p.mdx)("div",e)}),x={_frontmatter:m},u=o.Z;function s(e){var a=e.components,n=(0,i.Z)(e,d);return(0,p.mdx)(u,(0,r.Z)({},x,n,{components:a,mdxType:"MDXLayout"}),(0,p.mdx)(l,{platform:"android",api:"clear-updated-configuration",repeat:"5",mdxType:"Variant"}),(0,p.mdx)("h4",{id:"java"},"Java"),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Syntax")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-java"},"public static void clearUpdatedConfiguration();\n")),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Example")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-java"},"MobileCore.clearUpdatedConfiguration();\n")),(0,p.mdx)(l,{platform:"android",api:"configure-with-app-id",repeat:"5",mdxType:"Variant"}),(0,p.mdx)("h4",{id:"java-1"},"Java"),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Syntax")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-java"},"public static void configureWithAppID(final String appId);\n")),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Example")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-java"},'MobileCore.configureWithAppId("1423ae38-8385-8963-8693-28375403491d");\n')),(0,p.mdx)(l,{platform:"ios",api:"configure-with-app-id",repeat:"10",mdxType:"Variant"}),(0,p.mdx)("h4",{id:"swift"},"Swift"),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Syntax")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-swift"},"static func configure(withAppId: String)\n")),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Example")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-swift"},'ACPCore.configure(withAppId: "1423ae38-8385-8963-8693-28375403491d")\n')),(0,p.mdx)("h4",{id:"objective-c"},"Objective-C"),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Syntax")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (void) configureWithAppId: (NSString* __nullable) appid;\n")),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Example")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-objectivec"},'[ACPCore configureWithAppId:@"1423ae38-8385-8963-8693-28375403491d"];\n')),(0,p.mdx)(l,{platform:"unity",api:"configure-with-app-id",repeat:"5",mdxType:"Variant"}),(0,p.mdx)("h4",{id:"c"},"C#"),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Syntax")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-csharp"},"public static void ConfigureWithAppID(string appId)\n")),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Example")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-csharp"},'ACPCore.ConfigureWithAppID("1423ae38-8385-8963-8693-28375403491d");\n')),(0,p.mdx)(l,{platform:"xamarin",api:"configure-with-app-id",repeat:"7",mdxType:"Variant"}),(0,p.mdx)("h4",{id:"c-1"},"C#"),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Android syntax")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-csharp"},"public unsafe static void ConfigureWithAppID (string appId);\n")),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"iOS syntax")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-csharp"},"public static void ConfigureWithAppID (string appid);\n")),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Example")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-csharp"},'ACPCore.ConfigureWithAppID("1423ae38-8385-8963-8693-28375403491d");\n')),(0,p.mdx)(l,{platform:"android",api:"configure-with-file-in-assets",repeat:"5",mdxType:"Variant"}),(0,p.mdx)("h4",{id:"java-2"},"Java"),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Syntax")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-java"},"public static void configureWithFileInAssets(final String fileName);\n")),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Example")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-java"},'MobileCore.configureWithFileInAssets("exampleJSONfile.json");\n')),(0,p.mdx)(l,{platform:"android",api:"configure-with-file-in-path",repeat:"5",mdxType:"Variant"}),(0,p.mdx)("h4",{id:"java-3"},"Java"),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Syntax")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-java"},"public static void configureWithFileInPath(final String filePath);\n")),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Example")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-java"},'MobileCore.configureWithFileInPath("absolute/path/to/exampleJSONfile.json");\n')),(0,p.mdx)(l,{platform:"ios",api:"configure-with-file-in-path",repeat:"10",mdxType:"Variant"}),(0,p.mdx)("h4",{id:"swift-1"},"Swift"),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Syntax")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-swift"},"static func configureWithFile(inPath: String)\n")),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Example")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-swift"},'let filePath = Bundle.main.path(forResource: "ExampleJSONFile", ofType: "json")\nACPCore.configureWithFile(inPath: filePath)\n')),(0,p.mdx)("h4",{id:"objective-c-1"},"Objective-C"),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Syntax")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (void) configureWithFileInPath: (NSString* __nullable) filepath;\n")),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Example")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-objectivec"},'NSString *filePath = [[NSBundle mainBundle] pathForResource:@"ExampleJSONFile"ofType:@"json"];\n[ACPCore configureWithFileInPath:filePath];\n')),(0,p.mdx)(l,{platform:"xamarin",api:"configure-with-file-in-path",repeat:"7",mdxType:"Variant"}),(0,p.mdx)("h4",{id:"c-2"},"C#"),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Android syntax")," "),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-csharp"},"public unsafe static void ConfigureWithFileInPath (string filepath);\n")),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"iOS syntax")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-csharp"},"public static void ConfigureWithFileInPath (string filepath);\n")),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Example")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-csharp"},'ACPCore.ConfigureWithFileInPath("absolute/path/to/exampleJSONfile.json");\n')),(0,p.mdx)(l,{platform:"android",api:"extension-version",repeat:"2",mdxType:"Variant"}),(0,p.mdx)("h4",{id:"java-4"},"Java"),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-java"},"String coreExtensionVersion = MobileCore.extensionVersion();\n")),(0,p.mdx)(l,{platform:"ios",api:"extension-version",repeat:"4",mdxType:"Variant"}),(0,p.mdx)("h4",{id:"swift-2"},"Swift"),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-swift"},"let coreExtensionVersion  = ACPCore.extensionVersion()\n")),(0,p.mdx)("h4",{id:"objective-c-2"},"Objective-C"),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-objectivec"},"NSString *coreExtensionVersion = [ACPCore extensionVersion];\n")),(0,p.mdx)(l,{platform:"react-native",api:"extension-version",repeat:"2",mdxType:"Variant"}),(0,p.mdx)("h4",{id:"javascript"},"JavaScript"),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-jsx"},'ACPCore.extensionVersion().then(coreExtensionVersion => console.log("AdobeExperienceSDK: ACPCore version: " + coreExtensionVersion));\n')),(0,p.mdx)(l,{platform:"flutter",api:"extension-version",repeat:"2",mdxType:"Variant"}),(0,p.mdx)("h4",{id:"dart"},"Dart"),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-dart"},"String coreExtensionVersion = await FlutterACPCore.extensionVersion;\n")),(0,p.mdx)(l,{platform:"cordova",api:"extension-version",repeat:"2",mdxType:"Variant"}),(0,p.mdx)("h4",{id:"cordova"},"Cordova"),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-jsx"},'ACPCore.extensionVersion(function(version) {  \n   console.log("ACPCore version: " + version);\n}, function(error) {  \n   console.log(error);  \n});\n')),(0,p.mdx)(l,{platform:"unity",api:"extension-version",repeat:"2",mdxType:"Variant"}),(0,p.mdx)("h4",{id:"c-3"},"C#"),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-csharp"},"string coreExtensionVersion = ACPCore.ExtensionVersion();\n")),(0,p.mdx)(l,{platform:"xamarin",api:"extension-version",repeat:"2",mdxType:"Variant"}),(0,p.mdx)("h4",{id:"c-4"},"C#"),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-csharp"},"string coreExtensionVersion = ACPCore.ExtensionVersion();\n")),(0,p.mdx)(l,{platform:"android",api:"update-configuration",repeat:"5",mdxType:"Variant"}),(0,p.mdx)("h4",{id:"java-5"},"Java"),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Syntax")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-java"},"public static void updateConfiguration(final Map configMap);\n")),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Example")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> data = new HashMap<String, Object>();\ndata.put("global.privacy", "optedout");\nMobileCore.updateConfiguration(data);\n')),(0,p.mdx)(l,{platform:"ios",api:"update-configuration",repeat:"10",mdxType:"Variant"}),(0,p.mdx)("h4",{id:"swift-3"},"Swift"),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Syntax")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-swift"},"static func updateConfiguration(_: [String: Any])\n")),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Example")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-swift"},'let updatedConfig = ["global.privacy":"optedout"]\nACPCore.updateConfiguration(updatedConfig)\n')),(0,p.mdx)("h4",{id:"objective-c-3"},"Objective-C"),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Syntax")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (void) updateConfiguration: (NSDictionary* __nullable) config;\n")),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Example")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-objectivec"},'NSDictionary *updatedConfig = @{@"global.privacy":@"optedout"};\n[ACPCore updateConfiguration:updatedConfig];\n')),(0,p.mdx)(l,{platform:"react-native",api:"update-configuration",repeat:"5",mdxType:"Variant"}),(0,p.mdx)("h4",{id:"javascript-1"},"JavaScript"),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Syntax")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-javascript"},"updateConfiguration(configMap?: { string: any })\n")),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Example")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-jsx"},'ACPCore.updateConfiguration({"global.privacy":"optedout"});\n')),(0,p.mdx)(l,{platform:"flutter",api:"update-configuration",repeat:"5",mdxType:"Variant"}),(0,p.mdx)("h4",{id:"dart-1"},"Dart"),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Syntax")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-dart"},"static Future<void> updateConfiguration(Map<String, Object> configMap);\n")),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Example")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-dart"},'FlutterACPCore.updateConfiguration({"global.privacy":"optedout"});\n')),(0,p.mdx)(l,{platform:"cordova",api:"update-configuration",repeat:"2",mdxType:"Variant"}),(0,p.mdx)("h4",{id:"javascript-2"},"Javascript"),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-javascript"},'ACPCore.updateConfiguration({"newConfigKey":"newConfigValue"}, successCallback, errorCallback);\n')),(0,p.mdx)(l,{platform:"unity",api:"update-configuration",repeat:"5",mdxType:"Variant"}),(0,p.mdx)("h4",{id:"c-5"},"C#"),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Syntax")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-csharp"},"public static void UpdateConfiguration(Dictionary<string, object> config);\n")),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Example")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-csharp"},'var dict = new Dictionary<string, object>();\ndict.Add("newConfigKey", "newConfigValue");\nACPCore.UpdateConfiguration(dict);\n')),(0,p.mdx)(l,{platform:"xamarin",api:"update-configuration",repeat:"7",mdxType:"Variant"}),(0,p.mdx)("h4",{id:"c-6"},"C#"),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Syntax")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-csharp"},"void UpdateConfiguration([NullAllowed] NSDictionary config);\n")),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"iOS example")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-csharp"},' var config = new NSMutableDictionary<NSString, NSObject>\n {\n   ["newConfigKey"] = new NSString("newConfigValue")\n };\nACPCore.UpdateConfiguration(config);\n')),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Android example")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-csharp"},'var config = new Dictionary<string, Java.Lang.Object>();\nconfig.Add("newConfigKey", "newConfigValue");\nACPCore.UpdateConfiguration(config);\n')))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-documentation-mobile-core-configuration-api-reference-md-0178168c223a8a9aeae6.js.map