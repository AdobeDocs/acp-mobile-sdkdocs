{"version":3,"file":"component---src-pages-documentation-platform-assurance-sdk-api-reference-md-681e3ad47fa9fde0ac5d.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/documentation/platform-assurance-sdk/api-reference.md","webpack://dev-site-documentation-template/./src/pages/documentation/platform-assurance-sdk/tabs/api-reference.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/acp-mobile-sdkdocs/acp-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Tabs from './tabs/api-reference.md';\nimport Alerts from '/src/pages/documentation/resources/alerts.md';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst TabsBlock = makeShortcode(\"TabsBlock\");\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"assurance-api-reference\"\n    }}>{`Assurance API reference`}</h1>\n    <Alerts query=\"platform=outdated-version&componentClass=InlineNestedAlert\" mdxType=\"Alerts\" />\n    <h2 {...{\n      \"id\": \"extensionversion\"\n    }}>{`extensionVersion`}</h2>\n    <p>{`Returns the current version of the AEP Assurance extension.`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"7\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=extension-version\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&api=extension-version\" mdxType=\"Tabs\" />\n    <p>{`React Native`}</p>\n    <Tabs query=\"platform=react-native&api=extension-version\" mdxType=\"Tabs\" />\n    <p>{`Flutter`}</p>\n    <Tabs query=\"platform=flutter&api=extension-version\" mdxType=\"Tabs\" />\n    <p>{`Cordova`}</p>\n    <Tabs query=\"platform=cordova&api=extension-version\" mdxType=\"Tabs\" />\n    <p>{`Unity`}</p>\n    <Tabs query=\"platform=unity&api=extension-version\" mdxType=\"Tabs\" />\n    <p>{`Xamarin`}</p>\n    <Tabs query=\"platform=xamarin&api=extension-version\" mdxType=\"Tabs\" />\n    <h2 {...{\n      \"id\": \"startsession\"\n    }}>{`startSession`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`startSession`}</inlineCode>{` API needs to be called to begin a AEP Assurance session. When called, the Mobile SDK displays a PIN authentication overlay to begin a session.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`You may call this API when the app launches with a URL (see code snippet below for sample usage)`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"7\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=start-session\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&api=start-session\" mdxType=\"Tabs\" />\n    <p>{`React Native`}</p>\n    <Tabs query=\"platform=react-native&api=start-session\" mdxType=\"Tabs\" />\n    <p>{`Flutter`}</p>\n    <Tabs query=\"platform=flutter&api=start-session\" mdxType=\"Tabs\" />\n    <p>{`Cordova`}</p>\n    <Tabs query=\"platform=cordova&api=start-session\" mdxType=\"Tabs\" />\n    <p>{`Unity`}</p>\n    <Tabs query=\"platform=unity&api=start-session\" mdxType=\"Tabs\" />\n    <p>{`Xamarin`}</p>\n    <Tabs query=\"platform=xamarin&api=start-session\" mdxType=\"Tabs\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/acp-mobile-sdkdocs/acp-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Variant = makeShortcode(\"Variant\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Variant platform=\"android\" api=\"extension-version\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static String extensionVersion()\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Assurance.extensionVersion()\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"extension-version\" repeat=\"8\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`AEPAssurance.extensionVersion()\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (nonnull NSString*) extensionVersion;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`[AEPAssurance extensionVersion];\n`}</code></pre>\n    <Variant platform=\"react-native\" api=\"extension-version\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript\"\n    }}>{`JavaScript`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`AEPAssurance.extensionVersion().then(version => console.log(\"AdobeExperienceSDK: AEP Assurance version: \" + version));\n`}</code></pre>\n    <Variant platform=\"flutter\" api=\"extension-version\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"dart\"\n    }}>{`Dart`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`static Future<String> get extensionVersion async\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`assuranceVersion = await FlutterAssurance.extensionVersion;\n`}</code></pre>\n    <Variant platform=\"cordova\" api=\"extension-version\" repeat=\"4\" mdxType=\"Variant\" />\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`AEPAssurance.extensionVersion = function(success, fail);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`AEPAssurance.extensionVersion(function(version) {  \n   console.log(\"AEPAssurance version: \" + version);\n}, function(error) {  \n   console.log(error);  \n});\n`}</code></pre>\n    <Variant platform=\"unity\" api=\"extension-version\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public static string ExtensionVersion()\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`string version = AEPAssurance.ExtensionVersion();\nprint(LOG_TAG + \"Assurance version: \"+version);\n`}</code></pre>\n    <Variant platform=\"xamarin\" api=\"extension-version\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-1\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`string version = AEPAssurance.ExtensionVersion()  \nConsole.WriteLine(\"AEPAssurance version installed is: \" + version);\n`}</code></pre>\n    <Variant platform=\"android\" api=\"start-session\" repeat=\"7\" mdxType=\"Variant\" />\n    <p>{`This API is optional for Android.`}</p>\n    <p>{`Android does not require this API to be called. When the `}<inlineCode parentName=\"p\">{`registerExtension`}</inlineCode>{` API is called, AEP Assurance extension registers the app lifecycle handlers which automatically pick up any deep links and use them to start the session.`}</p>\n    <h4 {...{\n      \"id\": \"java-1\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void startSession(final String url)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{` Assurance.startSession(url);\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"start-session\" repeat=\"10\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-1\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func application(_ app: UIApplication, open url: URL, options: [UIApplication.OpenURLOptionsKey : Any] = [:]) -> Bool {\n    do {\n        AEPAssurance.startSession(url)\n        return false\n    }\n}\n`}</code></pre>\n    <p>{`For SceneDelegate based applications`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`    func scene(_ scene: UIScene, openURLContexts URLContexts: Set<UIOpenURLContext>) {\n        AEPAssurance.startSession(URLContexts.first!.url)\n    }\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-1\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) startSession: (NSURL* _Nonnull) url;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`- (BOOL)application:(UIApplication *)app openURL:(nonnull NSURL *)url options:(nonnull NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options {\n    [AEPAssurance startSession:url];\n    return false;\n}\n`}</code></pre>\n    <Variant platform=\"react-native\" api=\"start-session\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript-1\"\n    }}>{`JavaScript`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`AEPAssurance.startSession(\"your-assurance-session-url\");\n`}</code></pre>\n    <Variant platform=\"flutter\" api=\"start-session\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"dart-1\"\n    }}>{`Dart`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`static Future<void> startSession(String url);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`FlutterAssurance.startSession(url);\n`}</code></pre>\n    <Variant platform=\"cordova\" api=\"start-session\" repeat=\"4\" mdxType=\"Variant\" />\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`AEPAssurance.startSession = function(sessionurl,success, fail);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`AEPAssurance.startSession(url,function(result) {  \n   console.log(\"AdobeExperenceSDK: AEPAssurance session started succesfully: \" + result);\n}, function(error) {  \n   console.log(\"AdobeExperenceSDK: Failed to start AEPAssurance session: \" + error);\n});\n`}</code></pre>\n    <Variant platform=\"unity\" api=\"start-session\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-2\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public static void StartSession(string url)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`AEPAssurance.StartSession(url);\n`}</code></pre>\n    <Variant platform=\"xamarin\" api=\"start-session\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-3\"\n    }}>{`C#`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`AEPAssurance.StartSession(url);\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","mdx","TabsBlock","InlineAlert","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_excluded","_extends","mdxType","Alerts","query","orientation","slots","repeat","Tabs","parentName","variant","isMDXComponent","Variant","platform","api"],"sourceRoot":""}