{"version":3,"file":"component---src-pages-documentation-getting-started-tabs-enable-debug-logging-md-a238be4c24d89605b5db.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/documentation/getting-started/tabs/enable-debug-logging.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/acp-mobile-sdkdocs/acp-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Variant = makeShortcode(\"Variant\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Variant platform=\"android\" task=\"enable\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`MobileCore.setLogLevel(LoggingMode.DEBUG);\n// MobileCore.setLogLevel(LoggingMode.VERBOSE);\n// MobileCore.setLogLevel(LoggingMode.WARNING);\n// MobileCore.setLogLevel(LoggingMode.ERROR);\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"enable\" repeat=\"4\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`ACPCore.setLogLevel(ACPMobileLogLevel.debug)\n// ACPCore.setLogLevel(ACPMobileLogLevel.verbose)\n// ACPCore.setLogLevel(ACPMobileLogLevel.warning)\n// ACPCore.setLogLevel(ACPMobileLogLevel.error)\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`[ACPCore setLogLevel:ACPMobileLogLevelDebug];\n// [ACPCore setLogLevel:ACPMobileLogLevelVerbose];\n// [ACPCore setLogLevel:ACPMobileLogLevelWarning];\n// [ACPCore setLogLevel:ACPMobileLogLevelError];\n`}</code></pre>\n    <Variant platform=\"react-native\" task=\"enable\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript\"\n    }}>{`Javascript`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPCore.setLogLevel(ACPMobileLogLevel.DEBUG);\n//ACPCore.setLogLevel(ACPMobileLogLevel.VERBOSE);\n//ACPCore.setLogLevel(ACPMobileLogLevel.WARNING);\n//ACPCore.setLogLevel(ACPMobileLogLevel.ERROR);\n`}</code></pre>\n    <Variant platform=\"flutter\" task=\"enable\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"dart\"\n    }}>{`Dart`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`FlutterACPCore.setLogLevel(ACPLoggingLevel.DEBUG);\n//FlutterACPCore.setLogLevel(ACPLoggingLevel.VERBOSE);\n//FlutterACPCore.setLogLevel(ACPLoggingLevel.WARNING);\n//FlutterACPCore.setLogLevel(ACPLoggingLevel.ERROR);\n`}</code></pre>\n    <Variant platform=\"cordova\" task=\"enable\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"cordova\"\n    }}>{`Cordova`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`ACPCore.setLogLevel(ACPCore.ACPMobileLogLevelError, successCallback, errorCallback);\nACPCore.setLogLevel(ACPCore.ACPMobileLogLevelWarning, successCallback, errorCallback);\nACPCore.setLogLevel(ACPCore.ACPMobileLogLevelDebug, successCallback, errorCallback);\nACPCore.setLogLevel(ACPCore.ACPMobileLogLevelVerbose, successCallback, errorCallback);\n`}</code></pre>\n    <Variant platform=\"unity\" task=\"enable\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c\"\n    }}>{`C#`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`ACPCore.SetLogLevel(ACPCore.ACPMobileLogLevel.ERROR);\nACPCore.SetLogLevel(ACPCore.ACPMobileLogLevel.WARNING);\nACPCore.SetLogLevel(ACPCore.ACPMobileLogLevel.DEBUG);\nACPCore.SetLogLevel(ACPCore.ACPMobileLogLevel.VERBOSE);\n`}</code></pre>\n    <Variant platform=\"android\" task=\"metrics\" repeat=\"7\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-1\"\n    }}>{`Java`}</h4>\n    <p>{`With the `}<inlineCode parentName=\"p\">{`onResume`}</inlineCode>{` function, start Lifecycle data collection:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`@Override  \n   public void onResume() {  \n      MobileCore.setApplication(getApplication());\n      MobileCore.lifecycleStart(null);\n   }\n`}</code></pre>\n    <p>{`Setting the application is only necessary on activities that are entry points for your application. However, setting the application on each `}<inlineCode parentName=\"p\">{`Activity`}</inlineCode>{` has no negative impact and ensures that the SDK always has the necessary reference to your application. As a result, you should call `}<inlineCode parentName=\"p\">{`setApplication`}</inlineCode>{` on each of your activities.`}</p>\n    <p>{`You can use the `}<inlineCode parentName=\"p\">{`onPause`}</inlineCode>{` function to pause the lifecycle data collection:`}</p>\n    <p>{`To ensure accurate session and crash reporting, this call must be added to every `}<inlineCode parentName=\"p\">{`Activity`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`@Override\n   public void onPause() {\n      MobileCore.lifecyclePause();\n   }\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"metrics\" repeat=\"16\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-1\"\n    }}>{`Swift`}</h4>\n    <p>{`Start Lifecycle data collection by calling `}<inlineCode parentName=\"p\">{`lifecycleStart:`}</inlineCode>{` from within the callback of the `}<inlineCode parentName=\"p\">{`ACPCore::start:`}</inlineCode>{` method in your app's `}<inlineCode parentName=\"p\">{`application:didFinishLaunchingWithOptions:`}</inlineCode>{` delegate method.`}</p>\n    <p>{`If your iOS application supports background capabilities, your `}<inlineCode parentName=\"p\">{`application:didFinishLaunchingWithOptions:`}</inlineCode>{` method might be called when iOS launches your app in the background. If you do not want background launches to count towards your lifecycle metrics, then `}<inlineCode parentName=\"p\">{`lifecycleStart:`}</inlineCode>{` should only be called when the application state is not equal to `}<inlineCode parentName=\"p\">{`UIApplicationStateBackground`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplicationLaunchOptionsKey: Any]?) -> Bool {\n    // register the lifecycle extension\n    ACPLifecycle.registerExtension();\n\n    let appState = application.applicationState;            \n    ACPCore.start {\n        // only start lifecycle if the application is not in the background    \n        if appState != .background {\n            ACPCore.lifecycleStart(nil)\n        }    \n    }    \n}\n`}</code></pre>\n    <p>{`When launched, if your app is resuming from a backgrounded state, iOS might call your `}<inlineCode parentName=\"p\">{`applicationWillEnterForeground:`}</inlineCode>{` delegate method. You also need to call `}<inlineCode parentName=\"p\">{`lifecycleStart:`}</inlineCode>{`, but this time you do not need all of the supporting code that you used in `}<inlineCode parentName=\"p\">{`application:didFinishLaunchingWithOptions:`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func applicationWillEnterForeground(_ application: UIApplication) {    \n    ACPCore.lifecycleStart(nil)\n}\n`}</code></pre>\n    <p>{`When the app enters the background, pause Lifecycle data collection from your app's `}<inlineCode parentName=\"p\">{`applicationDidEnterBackground:`}</inlineCode>{` delegate method:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func applicationDidEnterBackground(_ application: UIApplication) {    \n    ACPCore.lifecyclePause()\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-1\"\n    }}>{`Objective-C`}</h4>\n    <p>{`Start Lifecycle data collection by calling `}<inlineCode parentName=\"p\">{`lifecycleStart:`}</inlineCode>{` from within the callback of the `}<inlineCode parentName=\"p\">{`ACPCore::start:`}</inlineCode>{` method in your app's `}<inlineCode parentName=\"p\">{`application:didFinishLaunchingWithOptions:`}</inlineCode>{` delegate method.`}</p>\n    <p>{`If your iOS application supports background capabilities, you `}<inlineCode parentName=\"p\">{`application:didFinishLaunchingWithOptions:`}</inlineCode>{` method may be called when iOS launches your app in the background. If you do not want background launches to count towards your lifecycle metrics, then `}<inlineCode parentName=\"p\">{`lifecycleStart:`}</inlineCode>{` should only be called when the application state is not equal to `}<inlineCode parentName=\"p\">{`UIApplicationStateBackground`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`- (BOOL) application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    // register the lifecycle extension\n    [ACPLifecycle registerExtension];\n\n    const UIApplicationState appState = application.applicationState;\n    [ACPCore start:^{\n        // only start lifecycle if the application is not in the background\n        if (appState != UIApplicationStateBackground) {\n            [ACPCore lifecycleStart:nil];\n        }\n    }];\n}\n`}</code></pre>\n    <p>{`When launched, if your app is resuming from a backgrounded state, iOS may call your `}<inlineCode parentName=\"p\">{`applicationWillEnterForeground:`}</inlineCode>{` delegate method. You also need to call `}<inlineCode parentName=\"p\">{`lifecycleStart:`}</inlineCode>{`, but this time you do not need all of the supporting code that you used in `}<inlineCode parentName=\"p\">{`application:didFinishLaunchingWithOptions:`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`- (void) applicationWillEnterForeground:(UIApplication *)application {\n    [ACPCore lifecycleStart:nil];\n}\n`}</code></pre>\n    <p>{`When the app enters the background, pause Lifecycle data collection from your app's `}<inlineCode parentName=\"p\">{`applicationDidEnterBackground:`}</inlineCode>{` delegate method:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{` - (void) applicationDidEnterBackground:(UIApplication *)application {\n    [ACPCore lifecyclePause];\n }\n`}</code></pre>\n    <Variant platform=\"react-native\" task=\"metrics\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript-1\"\n    }}>{`JavaScript`}</h4>\n    <p>{`You should implement Lifecycle metrics in native code. However, Lifecycle's APIs are available in Javascript if it fits your use case.`}</p>\n    <p><strong parentName=\"p\">{`Starting a Lifecycle event`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPCore.lifecycleStart({\"lifecycleStart\": \"myData\"});\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Pausing a Lifecycle event`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPCore.lifecyclePause();\n`}</code></pre>\n    <Variant platform=\"flutter\" task=\"metrics\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"flutter\"\n    }}>{`Flutter`}</h4>\n    <p>{`You need to implement Lifecycle in native Android and iOS code. For more information on implementing, please read the `}<a parentName=\"p\" {...{\n        \"href\": \"../lifecycle-for-edge-network/index.md\"\n      }}>{`Lifecycle documentation`}</a>{`.`}</p>\n    <Variant platform=\"cordova\" task=\"metrics\" repeat=\"4\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"cordova-1\"\n    }}>{`Cordova`}</h4>\n    <p>{`You need to implement Lifecycle in native Android and iOS code. For more information on implementing, please read the `}<a parentName=\"p\" {...{\n        \"href\": \"../lifecycle-for-edge-network/index.md\"\n      }}>{`Lifecycle documentation`}</a>{`.`}</p>\n    <p><strong parentName=\"p\">{`Getting Lifecycle version`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`ACPLifecycle.extensionVersion(function(version) {\n    console.log(version);\n}, function(error) {\n    console.log(error);\n});\n`}</code></pre>\n    <Variant platform=\"unity\" task=\"metrics\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-1\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`Starting and pausing a lifecycle event`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`private void OnApplicationPause(bool pauseStatus)\n{\n  if (pauseStatus)\n  {\n    ACPCore.LifecyclePause();\n  }\n  else\n  {\n    var cdata = new Dictionary<string, string>();\n    cdata.Add(\"launch.data\", \"added\");\n    ACPCore.LifecycleStart(cdata);\n  }\n}\n`}</code></pre>\n    <Variant platform=\"xamarin\" task=\"metrics\" repeat=\"7\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-2\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`iOS`}</strong></p>\n    <p><strong parentName=\"p\">{`Starting and pausing a lifecycle event`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public override void WillEnterForeground(UIApplication uiApplication)\n{\n  base.WillEnterForeground(uiApplication);\n  ACPCore.LifecycleStart(null);\n}\n\npublic override void DidEnterBackground(UIApplication uiApplication)\n{\n  base.DidEnterBackground(uiApplication);\n  ACPCore.LifecycleStart(null);\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Android`}</strong></p>\n    <p><strong parentName=\"p\">{`Starting and pausing a lifecycle event`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`protected override void OnResume()\n{\n  base.OnResume();\n  ACPCore.LifecycleStart(null);\n}\n\nprotected override void OnPause()\n{\n  base.OnPause();\n  ACPCore.LifecyclePause();\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","Variant","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_excluded","_extends","mdxType","platform","task","repeat","parentName","isMDXComponent"],"sourceRoot":""}