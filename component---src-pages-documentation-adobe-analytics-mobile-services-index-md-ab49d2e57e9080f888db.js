"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[5240,817],{8050:function(e,a,n){n.r(a),n.d(a,{_frontmatter:function(){return d},default:function(){return h}});var t=n(87462),i=n(63366),o=(n(15007),n(64983)),r=n(91515),l=n(81686),s=["components"],d={},p=function(e){return function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.mdx)("div",a)}},m=p("InlineAlert"),c=p("TabsBlock"),u=p("Media"),x={_frontmatter:d},g=r.Z;function h(e){var a=e.components,n=(0,i.Z)(e,s);return(0,o.mdx)(g,(0,t.Z)({},x,n,{components:a,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"adobe-analytics---mobile-services"},"Adobe Analytics - Mobile Services"),(0,o.mdx)("p",null,"This extension enables in-app messaging, push notifications, and marketing links functionality from ",(0,o.mdx)("a",{parentName:"p",href:"https://mobilemarketing.adobe.com"},"Mobile Services")," on the Experience Platform SDK."),(0,o.mdx)(m,{variant:"warning",slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"As of ",(0,o.mdx)("strong",{parentName:"p"},"April 1, 2020"),", Apple will no longer support UIWebView. To avoid any issues, ensure that you are using the iOS extension versions 1.0.3 or later. For more information, see Apple's documentation on ",(0,o.mdx)("a",{parentName:"p",href:"https://developer.apple.com/documentation/uikit/uiwebview"},"UIWebView"),"."),(0,o.mdx)(m,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"The Adobe Analytics Mobile Marketing Add-on SKU is required to enable Mobile Services access to mobile acquisition, deep linking, geolocation, and mobile messaging capabilities.",(0,o.mdx)("br",null),(0,o.mdx)("br",null),"For more information, please contact your Adobe Customer Success Manager."),(0,o.mdx)("p",null,"Review the following Mobile Services functionality documentation for context and set up before implementation at these links:"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("a",{parentName:"li",href:"https://experienceleague.adobe.com/docs/mobile-services/using/get-started-ug/gs.html"},"Getting started with Mobile Services")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("a",{parentName:"li",href:"https://experienceleague.adobe.com/docs/mobile-services/using/manage-apps-ug/manage-apps.html"},"Create and managing apps")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("a",{parentName:"li",href:"https://experienceleague.adobe.com/docs/mobile-services/using/acquisition-main-ug/acquisition-main.html"},"Acquisition and marketing links")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("a",{parentName:"li",href:"https://experienceleague.adobe.com/docs/mobile-services/using/messaging-ug/in-app-messaging.html"},"Push and in-app messaging"))),(0,o.mdx)(m,{variant:"warning",slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"Postbacks created from the Mobile Services interface are ",(0,o.mdx)("strong",{parentName:"p"},"not")," supported. Please use a rule defined in the Data Collection UI with the Mobile Core extension to create a postback."),(0,o.mdx)(m,{variant:"warning",slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"Before you configure the Mobile Services extension, ensure that you previously created apps in ",(0,o.mdx)("a",{parentName:"p",href:"https://mobilemarketing.adobe.com"},"Mobile Services"),". To learn how to create an app in Mobile Services, see the ",(0,o.mdx)("a",{parentName:"p",href:"https://experienceleague.adobe.com/docs/mobile-services/using/manage-apps-ug/t-new-app.html"},"add a new App")," tutorial."),(0,o.mdx)(m,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"To use location-based functionality for Mobile Services, see the documentation on the ",(0,o.mdx)("a",{parentName:"p",href:"https://experienceleague.adobe.com/docs/places/using/home.html"},"Places Service"),"."),(0,o.mdx)("p",null,"To use the Mobile Services extension, complete the following steps:"),(0,o.mdx)("ol",null,(0,o.mdx)("li",{parentName:"ol"},"Configure the Mobile Services extension in the Data Collection UI."),(0,o.mdx)("li",{parentName:"ol"},"If using acquisition and marketing links, update your configuration in the Analytics extension."),(0,o.mdx)("li",{parentName:"ol"},"Add Mobile Services extension to your app."),(0,o.mdx)("li",{parentName:"ol"},"Implement the Mobile Services APIs in your app.")),(0,o.mdx)("h2",{id:"configure-the-mobile-services-extension-in-the-data-collection-ui"},"Configure the Mobile Services extension in the Data Collection UI"),(0,o.mdx)(m,{variant:"warning",slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"The Mobile Services extension requires the Analytics extension for reporting. It uses the report suite that is specified in the Analytics extension for reporting. However, the Mobile Services extension uses the report suite that is configured for the app in Mobile Services for push and in-app messaging, acquisition, marketing links, and app management. If the report suite in the two locations do not match, a push message from the wrong report suite may be sent."),(0,o.mdx)("h3",{id:"automatic-configuration-recommended"},"Automatic configuration (Recommended)"),(0,o.mdx)("ol",null,(0,o.mdx)("li",{parentName:"ol"},"In the Data Collection UI, select the ",(0,o.mdx)("strong",{parentName:"li"},"Extensions")," tab."),(0,o.mdx)("li",{parentName:"ol"},"Choose ",(0,o.mdx)("strong",{parentName:"li"},"Catalog"),", locate the ",(0,o.mdx)("strong",{parentName:"li"},"Adobe Analytics â€“ Mobile Services")," extension, and select ",(0,o.mdx)("strong",{parentName:"li"},"Install"),"."),(0,o.mdx)("li",{parentName:"ol"},"Select a Mobile Services app and complete the following tasks:",(0,o.mdx)("ol",{parentName:"li"},(0,o.mdx)("li",{parentName:"ol"},"In ",(0,o.mdx)("strong",{parentName:"li"},"Mobile Services app"),", select app from the drop-down list."),(0,o.mdx)("li",{parentName:"ol"},"Select ",(0,o.mdx)("strong",{parentName:"li"},"Save"),"."),(0,o.mdx)("li",{parentName:"ol"},"Follow the publishing process to update the SDK configuration.")))),(0,o.mdx)("p",null,(0,o.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"1208px"}},"\n      ",(0,o.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"57.8125%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,o.mdx)("picture",{parentName:"span"},"\n          ",(0,o.mdx)("source",{parentName:"picture",srcSet:["/acp-mobile-sdkdocs/static/d4ef5cad956417c78101e6fa4ef1199c/5530d/install-extension.webp 320w","/acp-mobile-sdkdocs/static/d4ef5cad956417c78101e6fa4ef1199c/0c8fb/install-extension.webp 640w","/acp-mobile-sdkdocs/static/d4ef5cad956417c78101e6fa4ef1199c/a5bb4/install-extension.webp 1208w"],sizes:"(max-width: 1208px) 100vw, 1208px",type:"image/webp"}),"\n          ",(0,o.mdx)("source",{parentName:"picture",srcSet:["/acp-mobile-sdkdocs/static/d4ef5cad956417c78101e6fa4ef1199c/dd4a7/install-extension.png 320w","/acp-mobile-sdkdocs/static/d4ef5cad956417c78101e6fa4ef1199c/0f09e/install-extension.png 640w","/acp-mobile-sdkdocs/static/d4ef5cad956417c78101e6fa4ef1199c/047c3/install-extension.png 1208w"],sizes:"(max-width: 1208px) 100vw, 1208px",type:"image/png"}),"\n          ",(0,o.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/acp-mobile-sdkdocs/static/d4ef5cad956417c78101e6fa4ef1199c/047c3/install-extension.png",alt:"Mobile Services Extension Configuration",title:"Mobile Services Extension Configuration",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")),(0,o.mdx)("h3",{id:"manual-configuration"},"Manual configuration"),(0,o.mdx)(m,{variant:"error",slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"The following instructions only apply if you ",(0,o.mdx)("strong",{parentName:"p"},"do not")," see your app listed or need to manually configure your Mobile Services app."),(0,o.mdx)(m,{variant:"warning",slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"If you are sending data to multiple Analytics report suites, use the Acquisition App ID from the app that is associated with the first report suite in your list of report suite IDs."),(0,o.mdx)("p",null,(0,o.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"1208px"}},"\n      ",(0,o.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"60.62500000000001%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,o.mdx)("picture",{parentName:"span"},"\n          ",(0,o.mdx)("source",{parentName:"picture",srcSet:["/acp-mobile-sdkdocs/static/fde75f30712403a2c55ca3a0e4be4c5a/5530d/custom-install-extension.webp 320w","/acp-mobile-sdkdocs/static/fde75f30712403a2c55ca3a0e4be4c5a/0c8fb/custom-install-extension.webp 640w","/acp-mobile-sdkdocs/static/fde75f30712403a2c55ca3a0e4be4c5a/a5bb4/custom-install-extension.webp 1208w"],sizes:"(max-width: 1208px) 100vw, 1208px",type:"image/webp"}),"\n          ",(0,o.mdx)("source",{parentName:"picture",srcSet:["/acp-mobile-sdkdocs/static/fde75f30712403a2c55ca3a0e4be4c5a/dd4a7/custom-install-extension.png 320w","/acp-mobile-sdkdocs/static/fde75f30712403a2c55ca3a0e4be4c5a/0f09e/custom-install-extension.png 640w","/acp-mobile-sdkdocs/static/fde75f30712403a2c55ca3a0e4be4c5a/047c3/custom-install-extension.png 1208w"],sizes:"(max-width: 1208px) 100vw, 1208px",type:"image/png"}),"\n          ",(0,o.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/acp-mobile-sdkdocs/static/fde75f30712403a2c55ca3a0e4be4c5a/047c3/custom-install-extension.png",alt:"Mobile Services Extension Configuration",title:"Mobile Services Extension Configuration",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")),(0,o.mdx)("p",null,"To install the Mobile Services extension, complete the following steps:"),(0,o.mdx)("ol",null,(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"Select ",(0,o.mdx)("strong",{parentName:"p"},"Enter Custom settings"),".")),(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"Enter an Acquisition time out. The recommended time out is 5 seconds. To enable app acquisition, this value must be greater than 0.")),(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"Provide the ",(0,o.mdx)("strong",{parentName:"p"},"Acquisition App ID")," (sample value: ",(0,o.mdx)("inlineCode",{parentName:"p"},"0eb9f2791f0880623f91e41e5309d2ae25066e513054a4cb59168dc886b526da)"),")."),(0,o.mdx)("p",{parentName:"li"},"You can find the Acquisition App ID in Mobile Services.")),(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"Select your app, navigate to Manage App Settings page, and in the ",(0,o.mdx)("strong",{parentName:"p"},"SDK Acquisition Options")," section, copy the hashed string similar to the highlighted value:"),(0,o.mdx)("p",{parentName:"li"},(0,o.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"465px"}},"\n      ",(0,o.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"62.18749999999999%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,o.mdx)("picture",{parentName:"span"},"\n          ",(0,o.mdx)("source",{parentName:"picture",srcSet:["/acp-mobile-sdkdocs/static/6feb764c9d03c2fd79de41b12ca06bfd/5530d/sdk-acquisition-options.webp 320w","/acp-mobile-sdkdocs/static/6feb764c9d03c2fd79de41b12ca06bfd/ea01d/sdk-acquisition-options.webp 465w"],sizes:"(max-width: 465px) 100vw, 465px",type:"image/webp"}),"\n          ",(0,o.mdx)("source",{parentName:"picture",srcSet:["/acp-mobile-sdkdocs/static/6feb764c9d03c2fd79de41b12ca06bfd/dd4a7/sdk-acquisition-options.png 320w","/acp-mobile-sdkdocs/static/6feb764c9d03c2fd79de41b12ca06bfd/ad78b/sdk-acquisition-options.png 465w"],sizes:"(max-width: 465px) 100vw, 465px",type:"image/png"}),"\n          ",(0,o.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/acp-mobile-sdkdocs/static/6feb764c9d03c2fd79de41b12ca06bfd/ad78b/sdk-acquisition-options.png",alt:"sdk acquisition options",title:"sdk acquisition options",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    "))),(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"Provide the ",(0,o.mdx)("strong",{parentName:"p"},"Messages URL"),". This value would look something similar to: ",(0,o.mdx)("inlineCode",{parentName:"p"},"https://assets.adobedtm.com/b213432c5204bf94318f4ef0539a38b487d10368/scripts/satellite-5c7711bc64746d7f5800036e.json")),(0,o.mdx)("p",{parentName:"li"},"You can find the Messages URL from your ",(0,o.mdx)("inlineCode",{parentName:"p"},"ADBMobileConfig.json")," file typically near the bottom of the file."),(0,o.mdx)("p",{parentName:"li"},(0,o.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"813px"}},"\n      ",(0,o.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"35%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,o.mdx)("picture",{parentName:"span"},"\n          ",(0,o.mdx)("source",{parentName:"picture",srcSet:["/acp-mobile-sdkdocs/static/8435098b0dd7ebea07de661016a2fa97/5530d/adb-mobile-config.webp 320w","/acp-mobile-sdkdocs/static/8435098b0dd7ebea07de661016a2fa97/0c8fb/adb-mobile-config.webp 640w","/acp-mobile-sdkdocs/static/8435098b0dd7ebea07de661016a2fa97/5ab16/adb-mobile-config.webp 813w"],sizes:"(max-width: 813px) 100vw, 813px",type:"image/webp"}),"\n          ",(0,o.mdx)("source",{parentName:"picture",srcSet:["/acp-mobile-sdkdocs/static/8435098b0dd7ebea07de661016a2fa97/dd4a7/adb-mobile-config.png 320w","/acp-mobile-sdkdocs/static/8435098b0dd7ebea07de661016a2fa97/0f09e/adb-mobile-config.png 640w","/acp-mobile-sdkdocs/static/8435098b0dd7ebea07de661016a2fa97/765bd/adb-mobile-config.png 813w"],sizes:"(max-width: 813px) 100vw, 813px",type:"image/png"}),"\n          ",(0,o.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/acp-mobile-sdkdocs/static/8435098b0dd7ebea07de661016a2fa97/765bd/adb-mobile-config.png",alt:"adb mobile config",title:"adb mobile config",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    "))),(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"Select ",(0,o.mdx)("strong",{parentName:"p"},"Save"),".")),(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"Follow the publishing process to update your SDK configuration."))),(0,o.mdx)("h2",{id:"configure-the-adobe-analytics-extension"},"Configure the Adobe Analytics extension"),(0,o.mdx)("ol",null,(0,o.mdx)("li",{parentName:"ol"},"To ensure that this extension is correctly configured and implemented, follow the steps in the ",(0,o.mdx)("a",{parentName:"li",href:"#configure-the-mobile-services-extension-in-the-data-collection-ui"},"configure the Mobile Services extension in the Data Collection UI")," section."),(0,o.mdx)("li",{parentName:"ol"},"In ",(0,o.mdx)("strong",{parentName:"li"},"Launch Hit Delay"),", type a value of 5s or more to ensure that the acquisition context is sent to Analytics with your Lifecycle information.")),(0,o.mdx)("p",null,(0,o.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"642px"}},"\n      ",(0,o.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"99.6875%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,o.mdx)("picture",{parentName:"span"},"\n          ",(0,o.mdx)("source",{parentName:"picture",srcSet:["/acp-mobile-sdkdocs/static/b51e77d7df1aa35a3c274bc2201de713/5530d/launch-hit-delay.webp 320w","/acp-mobile-sdkdocs/static/b51e77d7df1aa35a3c274bc2201de713/0c8fb/launch-hit-delay.webp 640w","/acp-mobile-sdkdocs/static/b51e77d7df1aa35a3c274bc2201de713/321fb/launch-hit-delay.webp 642w"],sizes:"(max-width: 642px) 100vw, 642px",type:"image/webp"}),"\n          ",(0,o.mdx)("source",{parentName:"picture",srcSet:["/acp-mobile-sdkdocs/static/b51e77d7df1aa35a3c274bc2201de713/dd4a7/launch-hit-delay.png 320w","/acp-mobile-sdkdocs/static/b51e77d7df1aa35a3c274bc2201de713/0f09e/launch-hit-delay.png 640w","/acp-mobile-sdkdocs/static/b51e77d7df1aa35a3c274bc2201de713/58a74/launch-hit-delay.png 642w"],sizes:"(max-width: 642px) 100vw, 642px",type:"image/png"}),"\n          ",(0,o.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/acp-mobile-sdkdocs/static/b51e77d7df1aa35a3c274bc2201de713/58a74/launch-hit-delay.png",alt:"launch hit delay",title:"launch hit delay",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")),(0,o.mdx)("h2",{id:"add-the-mobile-services-extension-to-your-app"},"Add the Mobile Services extension to your app"),(0,o.mdx)(m,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"The Mobile Services extension depends on the Core extension, which includes the Identity and Lifecycle frameworks and the Analytics extension."),(0,o.mdx)(m,{variant:"warning",slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"iOS AEP (3.x) Mobile Services extension only supports Cocoapods. It does ",(0,o.mdx)("strong",{parentName:"p"},"not")," work with Swift Package Manager or when included in your app as an XCFramework dependency."),(0,o.mdx)(c,{orientation:"horizontal",slots:"heading, content",repeat:"2",mdxType:"TabsBlock"}),(0,o.mdx)("p",null,"Android"),(0,o.mdx)(l.default,{query:"platform=android&task=add",mdxType:"Tabs"}),(0,o.mdx)("p",null,"iOS"),(0,o.mdx)(l.default,{query:"platform=ios&task=add",mdxType:"Tabs"}),(0,o.mdx)("h2",{id:"register-mobile-services-with-mobile-core"},"Register Mobile Services with Mobile Core"),(0,o.mdx)(c,{orientation:"horizontal",slots:"heading, content",repeat:"2",mdxType:"TabsBlock"}),(0,o.mdx)("p",null,"Android"),(0,o.mdx)(l.default,{query:"platform=android&task=register",mdxType:"Tabs"}),(0,o.mdx)("p",null,"iOS"),(0,o.mdx)(l.default,{query:"platform=ios&task=register",mdxType:"Tabs"}),(0,o.mdx)("h2",{id:"implement-mobile-services-apis-in-your-app"},"Implement Mobile Services APIs in your app"),(0,o.mdx)("p",null,"To use your Android or iOS extension with the Experience Platform SDKs, implement the following APIs:"),(0,o.mdx)("h3",{id:"set-up-push-messaging"},"Set up push messaging"),(0,o.mdx)(c,{orientation:"horizontal",slots:"heading, content",repeat:"2",mdxType:"TabsBlock"}),(0,o.mdx)("p",null,"Android"),(0,o.mdx)(l.default,{query:"platform=android&task=set-push-messaging",mdxType:"Tabs"}),(0,o.mdx)("p",null,"iOS"),(0,o.mdx)(l.default,{query:"platform=ios&task=set-push-messaging",mdxType:"Tabs"}),(0,o.mdx)("h3",{id:"debugging-the-push-messaging-set-up"},"Debugging the push messaging set up"),(0,o.mdx)("p",null,"If the Mobile Services API is correctly configured, after installing your app on a mobile device, verify that the following SDK debug log is displayed:"),(0,o.mdx)("p",null,"To verify, make a request to ",(0,o.mdx)("inlineCode",{parentName:"p"},"demdex.net"),", containing the device push token has been sent:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-console"},"2019-01-31 18:22:35.261676-0800 DemoApp[935:156015] [AMSDK DEBUG <com.adobe.module.identity>]: Sending request (https://dpm.demdex.net/id?d_rtbd=json&d_ver=2&d_orgid=B1F855165B4C9EA50A495E06@AdobeOrg&d_mid=43583282444503123217621782542046274680&d_blob=j8Odv6LonN4r3an7LhD3WZrU1bUpAkFkkiY1ncBR96t2PTI&dcs_region=9)\n")),(0,o.mdx)("h3",{id:"set-up-push-tracking"},"Set up push tracking"),(0,o.mdx)("p",null,"Use the following API to track a push messaging click in Adobe Analytics."),(0,o.mdx)(m,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"Using the following API does not increment page views."),(0,o.mdx)(c,{orientation:"horizontal",slots:"heading, content",repeat:"2",mdxType:"TabsBlock"}),(0,o.mdx)("p",null,"Android"),(0,o.mdx)(l.default,{query:"platform=android&task=set-push-tracking",mdxType:"Tabs"}),(0,o.mdx)("p",null,"iOS"),(0,o.mdx)(l.default,{query:"platform=ios&task=set-push-tracking",mdxType:"Tabs"}),(0,o.mdx)("h2",{id:"troubleshooting-push-messaging"},"Troubleshooting push messaging"),(0,o.mdx)("p",null,"For more information, see the following:"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("a",{parentName:"li",href:"https://experienceleague.adobe.com/docs/mobile-services/android/messaging-android/push-messaging/c-troubleshooting-push-messaging.html"},"Android troubleshooting guide")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("a",{parentName:"li",href:"https://experienceleague.adobe.com/docs/mobile-services/ios/messaging-ios/push-messaging/c-troubleshooting-push-messaging.html"},"iOS troubleshooting guide"))),(0,o.mdx)("h2",{id:"set-up-in-app-messaging"},"Set up in-app messaging"),(0,o.mdx)("p",null,"This feature allows you to deliver in-app messages that are triggered from any analytics data or event. After the implementation, messages are dynamically delivered to the app and do not require a code update. In-app messages are created in Mobile Services. For more information, see the ",(0,o.mdx)("a",{parentName:"p",href:"https://experienceleague.adobe.com/docs/mobile-services/android/messaging-android/inapp-messaging/messaging.html"},"create an in-app message")," tutorial."),(0,o.mdx)("p",null,"To set up your app for in-app messages, implement the following instructions. You can complete these steps even if you have not yet defined any messages in Mobile Services. After you define messages, they are delivered dynamically to your app and displayed without an app store update."),(0,o.mdx)(c,{orientation:"horizontal",slots:"heading, content",repeat:"2",mdxType:"TabsBlock"}),(0,o.mdx)("p",null,"Android"),(0,o.mdx)(l.default,{query:"platform=android&task=set-in-app-messaging",mdxType:"Tabs"}),(0,o.mdx)("p",null,"iOS"),(0,o.mdx)(l.default,{query:"platform=ios&task=set-in-app-messaging",mdxType:"Tabs"}),(0,o.mdx)("h2",{id:"fallback-images"},"Fallback images"),(0,o.mdx)("p",null,"When creating a full-screen message, you can optionally specify a fallback image. If your message cannot retrieve its intended image from the web, the SDK attempts to load the image with the same name from your application's assets folder. This allows you to show your message in its original form, even if the user is offline or the predetermined image is unreachable."),(0,o.mdx)(m,{variant:"warning",slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"The fallback image asset name is specified when you configure the message in Mobile Services. You need to ensure that the specified resource is available."),(0,o.mdx)("h2",{id:"configuring-notification-icons"},"Configuring notification icons"),(0,o.mdx)("p",null,"The following methods allow you to configure the small and large icons that appear in the notification area, and the large icon that is displayed when notifications appear in the notification drawer."),(0,o.mdx)(c,{orientation:"horizontal",slots:"heading, content",repeat:"2",mdxType:"TabsBlock"}),(0,o.mdx)("p",null,"Android"),(0,o.mdx)(l.default,{query:"platform=android&task=set-icon",mdxType:"Tabs"}),(0,o.mdx)("p",null,"iOS"),(0,o.mdx)(l.default,{query:"platform=ios&task=set-icon",mdxType:"Tabs"}),(0,o.mdx)("h3",{id:"tracking-in-app-messages"},"Tracking in-app messages"),(0,o.mdx)("p",null,"The SDK automatically tracks metrics for your in-app messages."),(0,o.mdx)("p",null,"For full screen and alert style in-app messages, the following metrics are tracked:"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("strong",{parentName:"li"},"Impressions"),": when user triggers an in-app message."),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("strong",{parentName:"li"},"Click throughs"),": when user selects the ",(0,o.mdx)("strong",{parentName:"li"},"Click through")," button."),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("strong",{parentName:"li"},"Cancels"),": when user selects the ",(0,o.mdx)("strong",{parentName:"li"},"Cancel")," button.")),(0,o.mdx)("p",null,"For custom full screen in-app messages, the HTML content in the message needs to include the correct code to notify the SDK tracking about the following buttons:"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("strong",{parentName:"li"},"Click-through")," (redirect) example tracking: ",(0,o.mdx)("inlineCode",{parentName:"li"},"adbinapp://confirm/?url=http://www.yoursite.com")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("strong",{parentName:"li"},"Cancel")," (close) example tracking: ",(0,o.mdx)("inlineCode",{parentName:"li"},"adbinapp://cancel"))),(0,o.mdx)("p",null,"For local (remote) notifications, the following metrics are tracked:"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("strong",{parentName:"li"},"Impressions"),": when user triggers the notification."),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("strong",{parentName:"li"},"Opens"),": when user opens app from the notification.")),(0,o.mdx)("p",null,"The following example shows you how to include open tracking:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (BOOL) application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n\n  // handle local notification click-throughs for iOS 10 and older\n  NSDictionary *localNotificationDictionary = launchOptions[UIApplicationLaunchOptionsLocalNotificationKey];\n  if ([localNotificationDictionary isKindOfClass:[NSDictionary class]]) {\n       [ACPCore collectLaunchInfo:localNotificationDictionary];\n  }\n\n}\n- (void) application:(UIApplication *)application didReceiveLocalNotification:(UILocalNotification *)notification {\n   [ACPCore collectLaunchInfo:notification.userInfo];\n}\n")),(0,o.mdx)("h3",{id:"troubleshooting-in-app-messaging"},"Troubleshooting in-app messaging"),(0,o.mdx)("p",null,"For more information, see the following:"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("a",{parentName:"li",href:"https://experienceleague.adobe.com/docs/mobile-services/android/messaging-android/inapp-messaging/in-apps-ts.html"},"Android Troubleshooting guide")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("a",{parentName:"li",href:"https://experienceleague.adobe.com/docs/mobile-services/ios/messaging-ios/in-app-messaging/in-apps-ts.html"},"iOS Troubleshooting guide"))),(0,o.mdx)("h3",{id:"acquisition-and-marketing-links"},"Acquisition and marketing links"),(0,o.mdx)("p",null,"Acquisition and marketing links must be created in Adobe Mobile Services. For more information, see the documentation on ",(0,o.mdx)("a",{parentName:"p",href:"https://experienceleague.adobe.com/docs/mobile-services/using/acquisition-main-ug/acquisition-main.html"},"Acquisition")," within the Mobile Services."),(0,o.mdx)(m,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"The following configuration collects Acquisition link context from links that were created in Mobile Services and collects referrer data from the Google Play store."),(0,o.mdx)("p",null,"When the user downloads and runs an app as the result of a Google Play store acquisition, the data from the referrer is collected and sent to Adobe Mobile Services. Custom keys that were part of the acquisition data from Google Play are name-spaced with ",(0,o.mdx)("inlineCode",{parentName:"p"},"a.acquisition.custom"),"."),(0,o.mdx)("h4",{id:"using-the-broadcastreceiver"},"Using the ",(0,o.mdx)("inlineCode",{parentName:"h4"},"BroadcastReceiver")),(0,o.mdx)("ol",null,(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"Implement the ",(0,o.mdx)("inlineCode",{parentName:"p"},"BroadcastReceiver")," for the referrer."),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre",className:"language-java"},"package com.your.package.name;  // replace with your app package name\n\nimport android.content.BroadcastReceiver;\nimport android.content.Context;\nimport android.content.Intent;\n\npublic class GPBroadcastReceiver extends BroadcastReceiver {\n  @Override\n  public void onReceive(Context c, Intent i) {\n      com.adobe.marketing.mobile.MobileServices.processReferrer(c, i);\n  }\n}\n"))),(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"Update the ",(0,o.mdx)("inlineCode",{parentName:"p"},"AndroidManifest.xml")," to enable the ",(0,o.mdx)("inlineCode",{parentName:"p"},"BroadcastReceiver")," you previously created."),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre",className:"language-xml"},'<receiver android:name="com.your.package.name.GPBroadcastReceiver" android:exported="true">\n    <intent-filter>\n        <action android:name="com.android.vending.INSTALL_REFERRER" />\n    </intent-filter>\n</receiver>\n')))),(0,o.mdx)("h4",{id:"using-the-google-play-install-referrer-apis"},"Using the Google Play Install Referrer APIs"),(0,o.mdx)("p",null,"Starting on March 1, 2020, Google is deprecating the install","_","referrer intent broadcast mechanism. For more information, see the ",(0,o.mdx)("a",{parentName:"p",href:"https://android-developers.googleblog.com/2019/11/still-using-installbroadcast-switch-to.html"},"Still Using InstallBroadcast? Switch to the Play Referrer API by March 1, 2020"),". To continue collecting install referrer information from the Google Play store, update your application to use the Mobile Services extension version 1.1.0 or newer."),(0,o.mdx)("p",null,"With the deprecation, instead of creating a ",(0,o.mdx)("inlineCode",{parentName:"p"},"BroadcastReceiver"),", you need to collect the install referrer URL from a new Google API and pass the resulting URL to the SDK."),(0,o.mdx)("ol",null,(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"Add the Google Play Install Referrer package to your gradle file's dependencies:"),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre",className:"language-java"},"implementation 'com.android.installreferrer:installreferrer:1.1'\n"))),(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"To retrieve the referrer URL from the Install Referrer API, complete the steps in the ",(0,o.mdx)("a",{parentName:"p",href:"https://developer.android.com/google/play/installreferrer/library#install-referrer"},"get the install referrer")," tutorial.")),(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"Pass the referrer URL to the SDK:"),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre",className:"language-java"},"MobileServices.processGooglePlayInstallReferrerUrl(referrerUrl);\n")),(0,o.mdx)("p",{parentName:"li"},"To decide the best way to use the Google Play Install Referrer APIs in your app, see Google's documentation. Here is an example of how to use the Adobe SDK with the Google Play Install Referrer APIs:"),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre",className:"language-java"},'void handleGooglePlayReferrer() {\n    // Google recommends only calling this API the first time you need it:\n    // https://developer.android.com/google/play/installreferrer/library#install-referrer\n\n    // Store a boolean in SharedPreferences to ensure we only call it once.\n    final SharedPreferences prefs = getSharedPreferences("acquisition", 0);\n    if (prefs != null) {\n        if (prefs.getBoolean("referrerHasBeenProcessed", false)) {\n            return;\n        }\n    }\n\n    final InstallReferrerClient referrerClient = InstallReferrerClient.newBuilder(getApplicationContext()).build();\n    referrerClient.startConnection(new InstallReferrerStateListener() {\n        private boolean complete = false;\n\n        @Override\n        public void onInstallReferrerSetupFinished(int responseCode) {\n            switch (responseCode) {\n                case InstallReferrerClient.InstallReferrerResponse.OK:\n                    // connection is established\n                    complete();\n                    try {\n                        final ReferrerDetails details = referrerClient.getInstallReferrer();                        \n\n                        // pass the install referrer url to the SDK\n                        MobileServices.processGooglePlayInstallReferrerUrl(details.getInstallReferrer());\n\n                    } catch (final RemoteException ex) {\n                        Log.w("Acquisition - RemoteException while retrieving referrer information (%s)", ex.getLocalizedMessage() == null ? "unknown" : ex.getLocalizedMessage());\n                    } finally {\n                        referrerClient.endConnection();\n                    }\n                    break;\n                case InstallReferrerClient.InstallReferrerResponse.FEATURE_NOT_SUPPORTED:\n                case InstallReferrerClient.InstallReferrerResponse.SERVICE_UNAVAILABLE:\n                default:\n                    // API not available in the Play Store app - nothing to do here\n                    complete();\n                    referrerClient.endConnection();\n                    break;\n            }\n        }\n\n        @Override\n        public void onInstallReferrerServiceDisconnected() {\n            if (!complete) {\n                // something went wrong trying to get a connection, try again\n                referrerClient.startConnection(this);\n            }\n        }\n\n        void complete() {\n            complete = true;\n            SharedPreferences.Editor editor = getSharedPreferences("acquisition", 0).edit();\n            editor.putBoolean("referrerHasBeenProcessed", true);\n            editor.apply();\n        }\n    });\n}\n')))),(0,o.mdx)(m,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"No setup is required, since Acquisition context is automatically collected and tracked by the SDK."),(0,o.mdx)("h3",{id:"deep-link-tracking"},"Deep link tracking"),(0,o.mdx)("p",null,"The SDK can parse key-value pairs of data that are appended to any deep or universal link, provided the link contains a key ",(0,o.mdx)("inlineCode",{parentName:"p"},"a.deeplink.id")," and a corresponding non-null and user generated value. All key-value pairs of data that are appended to the URL string are parsed, attached to a lifecycle hit as context data, and sent to Adobe Analytics."),(0,o.mdx)("p",null,"You can also append one or more of the following reserved keys, with user-generated values, to the deep or universal link:"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"a.launch.campaign.trackingcode")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"a.launch.campaign.source")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"a.launch.campaign.medium")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"a.launch.campaign.medium")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"a.launch.campaign.content"))),(0,o.mdx)(m,{variant:"warning",slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"Ensure that the deep link URL has the ",(0,o.mdx)("inlineCode",{parentName:"p"},"a.deeplink.id")," key in the URL string. If ",(0,o.mdx)("inlineCode",{parentName:"p"},"a.deeplink.id")," is not found, none of the appended URL parameters are sent to Analytics via context data."),(0,o.mdx)(c,{orientation:"horizontal",slots:"heading, content",repeat:"2",mdxType:"TabsBlock"}),(0,o.mdx)("p",null,"Android"),(0,o.mdx)(l.default,{query:"platform=android&task=track-deep-link",mdxType:"Tabs"}),(0,o.mdx)("p",null,"iOS"),(0,o.mdx)(l.default,{query:"platform=ios&task=track-deep-link",mdxType:"Tabs"}),(0,o.mdx)("h2",{id:"integration-with-apple-search-ads-ios"},"Integration with Apple Search Ads (iOS)"),(0,o.mdx)("p",null,"The Adobe Experience Platform SDK leverages ",(0,o.mdx)("a",{parentName:"p",href:"https://developer.apple.com/documentation/iad/setting_up_apple_search_ads_attribution"},"Apple's Search Ads attribution")," to attribute app downloads that originate from Search Ads campaigns in the Apple App Store. For more information about Search Ad campaigns, see ",(0,o.mdx)("a",{parentName:"p",href:"https://searchads.apple.com/"},"Apple Search Ads"),". This optional feature helps you easily measure the effectiveness of your Search Ads app download campaigns by adding a few lines of code to your app."),(0,o.mdx)("h3",{id:"implement-search-ads-integration"},"Implement Search Ads integration"),(0,o.mdx)("p",null,"To enable your app for Search Ad attribution, you will need to ",(0,o.mdx)("a",{parentName:"p",href:"https://developer.apple.com/documentation/iad/setting_up_apple_search_ads_attribution#overview"},"add the iAd framework"),", in addition to the Mobile Services extension to your app."),(0,o.mdx)("h3",{id:"reporting-on-search-ads-attribution"},"Reporting on Search Ads Attribution"),(0,o.mdx)("p",null,"Apple Search Ads attribution data is provided in the acquisition name, the source, and the term values."),(0,o.mdx)("p",null,"If ",(0,o.mdx)("inlineCode",{parentName:"p"},"attribution = true")," , all of the ",(0,o.mdx)("inlineCode",{parentName:"p"},"iad-*"),' fields will be included in a Lifecycle request to Adobe Analytics. In addition, the following values will be mapped from the "iad" dictionary to our typical acquisition context data fields:'),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"iad-campaign-id")," --",">"," ",(0,o.mdx)("inlineCode",{parentName:"li"},"a.referrer.campaign.trackingcode")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"iad-campaign-name")," --",">"," ",(0,o.mdx)("inlineCode",{parentName:"li"},"a.referrer.campaign.name")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"iad-adgroup-id")," --",">"," ",(0,o.mdx)("inlineCode",{parentName:"li"},"a.referrer.campaign.content")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"iad-keyword")," --",">"," ",(0,o.mdx)("inlineCode",{parentName:"li"},"a.referrer.campaign.term"))),(0,o.mdx)("p",null,"This mapping ensures that the values are available in Adobe Analytics standard reporting."),(0,o.mdx)("h2",{id:"migration-notes"},"Migration notes"),(0,o.mdx)("p",null,"To prepare for your migration, please note the following information:"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},"Lifetime value is ",(0,o.mdx)("strong",{parentName:"li"},"not")," supported on the Experience Platform SDK, so it should not be used to trigger in-app messages or local notifications."),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"ce")," is no longer supported as a trigger for in-app messages or local notifications."),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"a.internalaction")," or ",(0,o.mdx)("inlineCode",{parentName:"li"},"action")," (from Lifecycle) can be used to trigger in-app messages or local notifications. You should, however, use ",(0,o.mdx)("inlineCode",{parentName:"li"},"LaunchEvent")," instead."),(0,o.mdx)("li",{parentName:"ul"},"Local notifications do ",(0,o.mdx)("strong",{parentName:"li"},"not")," support Android 8.0 or higher.")),(0,o.mdx)("h2",{id:"watch-the-video"},"Watch the video"),(0,o.mdx)(u,{slots:"video",mdxType:"Media"}),(0,o.mdx)("p",null,(0,o.mdx)("a",{parentName:"p",href:"https://youtu.be/VKI2ECZU3bU"},"https://youtu.be/VKI2ECZU3bU")),(0,o.mdx)("h3",{id:"additional-information"},"Additional information"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},"Visit ",(0,o.mdx)("a",{parentName:"li",href:"https://experienceleague.adobe.com/docs/mobile-services/using/home.html"},"Mobile Services documentation")),(0,o.mdx)("li",{parentName:"ul"},"Visit ",(0,o.mdx)("a",{parentName:"li",href:"https://mobilemarketing.adobe.com"},"Mobile Services"))))}h.isMDXComponent=!0},81686:function(e,a,n){n.r(a),n.d(a,{_frontmatter:function(){return d},default:function(){return u}});var t,i=n(87462),o=n(63366),r=(n(15007),n(64983)),l=n(91515),s=["components"],d={},p=(t="Variant",function(e){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.mdx)("div",e)}),m={_frontmatter:d},c=l.Z;function u(e){var a=e.components,n=(0,o.Z)(e,s);return(0,r.mdx)(c,(0,i.Z)({},m,n,{components:a,mdxType:"MDXLayout"}),(0,r.mdx)(p,{platform:"android",task:"add",repeat:"4",mdxType:"Variant"}),(0,r.mdx)("p",null,"Add the Mobile Services extension to your project using the app's Gradle file."),(0,r.mdx)("h4",{id:"java"},"Java"),(0,r.mdx)("p",null,"Import the Mobile Services extension in your application's main activity."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"import com.adobe.marketing.mobileservices.*;\n")),(0,r.mdx)(p,{platform:"ios",task:"add",repeat:"6",mdxType:"Variant"}),(0,r.mdx)("p",null,"You can add the library to your project through your ",(0,r.mdx)("inlineCode",{parentName:"p"},"Podfile")," by adding the ",(0,r.mdx)("inlineCode",{parentName:"p"},"ACPMobileServices")," pod."),(0,r.mdx)("p",null,"Import the library into your project:"),(0,r.mdx)("h4",{id:"swift"},"Swift"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},"import ACPCore\nimport ACPAnalytics\nimport ACPMobileServices\n")),(0,r.mdx)("h4",{id:"objective-c"},"Objective-C"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},'#import "ACPCore.h"\n#import "ACPIdentity.h"\n#import "ACPLifecycle.h"\n#import "ACPAnalytics.h"\n#import "ACPMobileServices.h"\n')),(0,r.mdx)(p,{platform:"android",task:"register",repeat:"3",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"java-1"},"Java"),(0,r.mdx)("p",null,"Call the ",(0,r.mdx)("inlineCode",{parentName:"p"},"setApplication()")," method once in the ",(0,r.mdx)("inlineCode",{parentName:"p"},"onCreate()")," method of your main activity. For example, your code might look like the following:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"public class MobileServicesApp extends Application {\n\n@Override\npublic void onCreate() {\n     super.onCreate();\n     MobileCore.setApplication(this);\n\n     try {\n             Analytics.registerExtension();\n             MobileServices.registerExtension(); //Register Mobile Services with Mobile Core\n             Lifecycle.registerExtension();\n             Identity.registerExtension();\n             MobileCore.start(null);\n     } catch (Exception e) {\n     //Log the exception\n     }\n  }\n}\n")),(0,r.mdx)(p,{platform:"ios",task:"register",repeat:"5",mdxType:"Variant"}),(0,r.mdx)("p",null,"In your app's ",(0,r.mdx)("inlineCode",{parentName:"p"},"application:didFinishLaunchingWithOptions")," function, register the Mobile Services extension with the Mobile Core:"),(0,r.mdx)("h4",{id:"swift-1"},"Swift"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},"func application(_application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool{\n        ACPAnalytics.registerExtension()\n        ACPIdentity.registerExtension()\n        ACPLifecycle.registerExtension()\n        ACPMobileServices.registerExtension()\n        ACPCore.start {\n            ACPCore.lifecycleStart(nil)\n        }\n    ...\n    return true\n  }\n")),(0,r.mdx)("h4",{id:"objective-c-1"},"Objective-C"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n   [ACPAnalytics registerExtension];\n   [ACPLifecycle registerExtension];\n   [ACPIdentity registerExtension];\n   [ACPMobileServices registerExtension];\n   [ACPCore start:nil]\n   // Override point for customization after application launch.\n   return YES;\n}\n")),(0,r.mdx)(p,{platform:"android",task:"set-push-messaging",repeat:"6",mdxType:"Variant"}),(0,r.mdx)("p",null,"Obtain the registration ID/token by using the ",(0,r.mdx)("a",{parentName:"p",href:"https://firebase.google.com/docs/cloud-messaging/android/client"},"Firebase Cloud Messaging (FCM) APIs"),"."),(0,r.mdx)("h4",{id:"java-2"},"Java"),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Syntax")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"void setPushIdentifier(final String registrationID)\n")),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Example")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"MobileCore.setPushIdentifier(registrationID);\n")),(0,r.mdx)(p,{platform:"ios",task:"set-push-messaging",repeat:"9",mdxType:"Variant"}),(0,r.mdx)("p",null,"iOS simulators do not support push messaging."),(0,r.mdx)("p",null,"After following Apple's ",(0,r.mdx)("a",{parentName:"p",href:"https://developer.apple.com/library/archive/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/HandlingRemoteNotifications.html#//apple_ref/doc/uid/TP40008194-CH6-SW1"},"configure remote notification document"),", to get your app ready to handle push notifications, set the push token by using the ",(0,r.mdx)("a",{parentName:"p",href:"../mobile-core/identity/api-reference.md#setpushidentifier"},(0,r.mdx)("inlineCode",{parentName:"a"},"setPushIdentifier"))," API:"),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Syntax")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (void) setPushIdentifier: (nullable NSData*) deviceToken;\n")),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Example")),(0,r.mdx)("h4",{id:"swift-2"},"Swift"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},'func application(_ application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) {\n    let tokenParts = deviceToken.map { data in String(format: "%02.2hhx", data) }\n    let token = tokenParts.joined()\n    print("Device Token: (token)")\n\n    // Send push token to experience platform\n    ACPCore.setPushIdentifier(deviceToken)\n}\n')),(0,r.mdx)("h4",{id:"objective-c-2"},"Objective-C"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken {\n  // Set the deviceToken that the APNS has assigned to the device\n  [ACPCore setPushIdentifier:deviceToken];\n  //...\n}\n")),(0,r.mdx)(p,{platform:"android",task:"set-push-tracking",repeat:"1",mdxType:"Variant"}),(0,r.mdx)("p",null,"On Android, the SDK handles push tracking to analytics without any additional set up. If the application has implemented the ",(0,r.mdx)("inlineCode",{parentName:"p"},"FirebaseMessaginService")," class and will handle the push notifications when the application is in foreground, read the push data from the received Intent and add it to the intent extras of the Activity to be launched. An example can be found in ",(0,r.mdx)("a",{parentName:"p",href:"https://experienceleague.adobe.com/docs/mobile-services_en/android/messaging-android/push-messaging/t-mob-impl-push-deeplinking-android-4x.html?lang=en"},"the Mobile Services implement push messaging tutorial"),"."),(0,r.mdx)(p,{platform:"ios",task:"set-push-tracking",repeat:"8",mdxType:"Variant"}),(0,r.mdx)("p",null,"Use the following API to track a push messaging click in Adobe Analytics."),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Syntax")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (void) collectLaunchInfo:(NSDictionary *)userInfo;\n")),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Example")),(0,r.mdx)("h4",{id:"swift-3"},"Swift"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},"ACPCore.collectLaunchInfo(userInfo)\n")),(0,r.mdx)("h4",{id:"objective-c-3"},"Objective-C"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},"[ACPCore collectLaunchInfo:userInfo];\n")),(0,r.mdx)(p,{platform:"android",task:"set-in-app-messaging",repeat:"8",mdxType:"Variant"}),(0,r.mdx)("p",null,"Update the ",(0,r.mdx)("inlineCode",{parentName:"p"},"AndroidManifest.xml")," file to declare the full screen activity and enable the Message Notification Handler."),(0,r.mdx)("h4",{id:"java-3"},"Java"),(0,r.mdx)("p",null,"If you are using either fullscreen message or local notification functionality, update the ",(0,r.mdx)("inlineCode",{parentName:"p"},"AndroidManifest.xml")," with the following:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-xml"},'<activity\n    android:name="com.adobe.marketing.mobile.MessageFullScreenActivity"\n    android:windowSoftInputMode="adjustUnspecified|stateHidden" >\n</activity>\n<receiver android:name="com.adobe.marketing.mobile.MessageNotificationHandler" />\n')),(0,r.mdx)("p",null,"If you selected a modal layout, select one of the following themes for the message:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"Theme.Translucent.NoTitleBar.Fullscreen")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"Theme.Translucent.NoTitleBar")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"Theme.Translucent"))),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Example")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-xml"},'<activity\nandroid:name="com.adobe.marketing.mobile.MessageFullScreenActivity"\nandroid:theme="@android:style/Theme.Translucent.NoTitleBar.Fullscreen"\nandroid:windowSoftInputMode="adjustUnspecified|stateHidden" >\n</activity>\n<receiver android:name="com.adobe.marketing.mobile.MessageNotificationHandler" />\n')),(0,r.mdx)(p,{platform:"ios",task:"set-in-app-messaging",repeat:"1",mdxType:"Variant"}),(0,r.mdx)("p",null,"No setup is required for iOS, since Mobile SDK automatically handles in-app message support."),(0,r.mdx)(p,{platform:"android",task:"set-icon",repeat:"12",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"setsmalliconresourceid"},"setSmallIconResourceId"),(0,r.mdx)("p",null,"This API sets the small icon that is used for notifications that are created by the SDK. This icon appears in the status bar and is the secondary image that is displayed shown when the user sees the complete notification in the notification center."),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Syntax")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"public static void setSmallIconResourceId(final int resourceId);\n")),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Example")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"MobileCore.setSmallIconResourceID(R.drawable.appIcon);\n")),(0,r.mdx)("h4",{id:"setlargeiconresourceid"},"setLargeIconResourceId"),(0,r.mdx)("p",null,"This API sets the large icon that is used for notifications that are created by the SDK. This icon is the primary image that is displayed when the user sees the complete notification in the notification center."),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Syntax")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"public static void setLargeIconResourceId(final int resourceId);\n")),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Example")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"MobileCore.setLargeIconResourceId(R.drawable.appIcon);\n")),(0,r.mdx)(p,{platform:"ios",task:"set-icon",repeat:"1",mdxType:"Variant"}),(0,r.mdx)("p",null,"No setup is required, since icons are automatically handled by the SDK for iOS."),(0,r.mdx)(p,{platform:"android",task:"track-deep-link",repeat:"5",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"java-4"},"Java"),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Syntax")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"public static void trackAdobeDeepLink(final Uri uri)\n")),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Example")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"MobileServices.trackAdobeDeepLink\n")),(0,r.mdx)(p,{platform:"ios",task:"track-deep-link",repeat:"15",mdxType:"Variant"}),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Syntax")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (void) trackAdobeDeepLink: (NSURL* _Nonnull) deeplink;\n")),(0,r.mdx)("h4",{id:"swift-4"},"Swift"),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Example")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},"func application(_ application: UIApplication, open url: URL, options: [UIApplication.OpenURLOptionsKey : Any] = [:]) -> Bool {\n    ACPMobileServices.trackAdobeDeepLink(url)\n    /*\n     Handle deep link\n     */\n    return true\n}\n")),(0,r.mdx)("h4",{id:"objective-c-4"},"Objective-C"),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Example")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (BOOL)application:(UIApplication *)app openURL:(NSURL *)url options:(NSDictionary<NSString *, id> *)options {\n    [ACPMobileServices trackAdobeDeepLink:url];\n    /*\n     Handle deep link\n     */\n    return YES;\n}\n")),(0,r.mdx)("p",null,"In iOS 13 and later, for a scene-based application, use the ",(0,r.mdx)("inlineCode",{parentName:"p"},"UISceneDelegate"),"'s ",(0,r.mdx)("inlineCode",{parentName:"p"},"scene(_:openURLContexts:)")," method as follows:"),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Swift")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},"func scene(_ scene: UIScene, openURLContexts URLContexts: Set<UIOpenURLContext>) {\n    guard let urlContexts = URLContexts.first else { return }\n    ACPMobileServices.trackAdobeDeepLink(urlContexts.url)\n    /*\n     Handle deep link\n     */\n}\n")),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Objective-C")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) scene:(UIScene *)scene openURLContexts:(NSSet<UIOpenURLContext *> *)URLContexts {\n    UIOpenURLContext * urlContext = URLContexts.anyObject;\n    if (urlContext != nil) {\n        [ACPMobileServices trackAdobeDeepLink:url];\n        /*\n         Handle deep link\n         */\n    }\n}\n")))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-documentation-adobe-analytics-mobile-services-index-md-ab49d2e57e9080f888db.js.map