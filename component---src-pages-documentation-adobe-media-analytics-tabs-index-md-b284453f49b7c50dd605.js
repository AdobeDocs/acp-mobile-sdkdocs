"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[2792],{87461:function(e,n,a){a.r(n),a.d(n,{_frontmatter:function(){return p},default:function(){return u}});var t,i=a(87462),o=a(63366),r=(a(15007),a(64983)),d=a(91515),l=["components"],p={},m=(t="Variant",function(e){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.mdx)("div",e)}),s={_frontmatter:p},c=d.Z;function u(e){var n=e.components,a=(0,o.Z)(e,l);return(0,r.mdx)(c,(0,i.Z)({},s,a,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)(m,{platform:"android",task:"add",repeat:"5",mdxType:"Variant"}),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},"Add the Media extension and its dependencies to your project using the app's Gradle file.")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"implementation 'com.adobe.marketing.mobile:sdk-core:1.+'\nimplementation 'com.adobe.marketing.mobile:analytics:1.+'\nimplementation 'com.adobe.marketing.mobile:media:2.+'\n")),(0,r.mdx)("p",null,"You can also manually include the libraries. Get ",(0,r.mdx)("inlineCode",{parentName:"p"},".aar")," libraries from ",(0,r.mdx)("a",{parentName:"p",href:"https://github.com/Adobe-Marketing-Cloud/acp-sdks/tree/master/android"},"Github"),"."),(0,r.mdx)("ol",{start:2},(0,r.mdx)("li",{parentName:"ol"},"Import the Media extension in your application's main activity.")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"import com.adobe.marketing.mobile.*;\n")),(0,r.mdx)(m,{platform:"ios",task:"add",repeat:"8",mdxType:"Variant"}),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},"To add the Media library and its dependencies to your project, add the following pods to your ",(0,r.mdx)("inlineCode",{parentName:"li"},"Podfile"),":")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-pod"},"pod 'ACPCore', '~> 2.0'\npod 'ACPAnalytics', '~> 2.0'\npod 'ACPMedia', '~> 2.0'\n")),(0,r.mdx)("p",null,"You can also manually include the libraries. Get ",(0,r.mdx)("inlineCode",{parentName:"p"},".a")," libraries from ",(0,r.mdx)("a",{parentName:"p",href:"https://github.com/Adobe-Marketing-Cloud/acp-sdks/tree/master/iOS"},"Github"),"."),(0,r.mdx)("ol",{start:2},(0,r.mdx)("li",{parentName:"ol"},"In Xcode project, import Media extension:")),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Swift")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},"import ACPMedia\n")),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Objective-C")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},'#import "ACPMedia.h"\n')),(0,r.mdx)(m,{platform:"react-native",task:"add",repeat:"11",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"javascript"},"JavaScript"),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},"Install Media.")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"   npm install @adobe/react-native-acpmedia\n")),(0,r.mdx)("p",null,"1.1 Link"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("strong",{parentName:"li"},"React Native 0.60+"))),(0,r.mdx)("p",null,(0,r.mdx)("a",{parentName:"p",href:"https://github.com/react-native-community/cli/blob/master/docs/autolinking.md"},"CLI autolink feature")," links the module while building the app."),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("strong",{parentName:"li"},"React Native ","<","= 0.59"))),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"   react-native link @adobe/react-native-acpmedia\n")),(0,r.mdx)("p",null,(0,r.mdx)("em",{parentName:"p"},"Note")," For ",(0,r.mdx)("inlineCode",{parentName:"p"},"iOS")," using ",(0,r.mdx)("inlineCode",{parentName:"p"},"cocoapods"),", run:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"   cd ios/ && pod install\n")),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},"Import the extension.")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},"import {ACPMedia} from '@adobe/react-native-acpmedia';\n")),(0,r.mdx)("ol",{start:2},(0,r.mdx)("li",{parentName:"ol"},"Get the extension version.")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},'ACPMedia.extensionVersion().then(version => console.log("AdobeExperienceSDK: ACPMedia version: " + version));\n')),(0,r.mdx)(m,{platform:"android",task:"register",repeat:"3",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"java"},"Java"),(0,r.mdx)("p",null,"To register media with Mobile Core, call the ",(0,r.mdx)("inlineCode",{parentName:"p"},"setApplication()")," method in ",(0,r.mdx)("inlineCode",{parentName:"p"},"onCreate()")," and call set up methods, as shown in this sample:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},'import com.adobe.marketing.mobile.*;\n\npublic class MobileApp extends Application {\n\n  @Override\n  public void onCreate() {\n      super.onCreate();\n      MobileCore.setApplication(this);\n\n      try {\n          Media.registerExtension();\n          Analytics.registerExtension();\n          Identity.registerExtension();\n          MobileCore.start(new AdobeCallback () {\n              @Override\n              public void call(Object o) {\n                  MobileCore.configureWithAppID("your-launch-app-id");\n              }\n          });\n      } catch (InvalidInitException e) {\n\n      }\n  }\n}\n')),(0,r.mdx)(m,{platform:"ios",task:"register",repeat:"6",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"swift"},"Swift"),(0,r.mdx)("p",null,"In your app's ",(0,r.mdx)("inlineCode",{parentName:"p"},"_:didFinishLaunchingWithOptions")," function, register the Audience Manager extension with the Mobile Core:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},'import ACPCore\nimport ACPAnalytics\nimport ACPIdentity\nimport ACPMedia\n\nfunc application(_ application: UIApplication,\n                 didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n    ACPCore.setLogLevel(.debug)\n    ACPCore.configure(withAppId: "your-launch-app-id")\n\n    ACPAnalytics.registerExtension()\n    ACPIdentity.registerExtension()\n    ACPMedia.registerExtension()\n\n    ACPCore.start {\n\n    }\n\n    return true;\n}\n')),(0,r.mdx)("h4",{id:"objective-c"},"Objective-C"),(0,r.mdx)("p",null,"In your app's ",(0,r.mdx)("inlineCode",{parentName:"p"},"application:didFinishLaunchingWithOptions"),", register Media with Mobile Core:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},'#import "ACPCore.h"\n#import "ACPAnalytics.h"\n#import "ACPIdentity.h"\n#import "ACPMedia.h"\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    [ACPCore setLogLevel:ACPMobileLogLevelDebug];\n    [ACPCore configureWithAppId:@"your-launch-app-id"];\n\n    [ACPAnalytics registerExtension];\n    [ACPIdentity registerExtension];\n    [ACPMedia registerExtension];\n\n    [ACPCore start:^{\n\n    }];\n\n    return YES;\n  }\n')),(0,r.mdx)(m,{platform:"react-native",task:"register",repeat:"2",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"javascript-1"},"JavaScript"),(0,r.mdx)("p",null,"When using React Native, registering Media with Mobile Core should be done in native code which is shown under the Android and iOS tabs."))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-documentation-adobe-media-analytics-tabs-index-md-b284453f49b7c50dd605.js.map